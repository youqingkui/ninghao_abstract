01-01-安装 composer

composer 是用在 php 上的一个依赖管理工具。以后我们会在很多地方用到 composer，这个视频我们先去安装一下它。先用命令行工具连接到你的服务器。这里我用的是 vagrant 在本地搭建的一个虚拟的环境。
安装 composer ，可以使用 curl 这条命令  ...  输入 curl ，可以再加上一个大写的 S 参数，表示要显示错误。后面加上 composer 的安装地址  ...  https://getcomposer.org/installer ，加上一个竖线，再输入 php ，表示用 php 去执行安装 ... 
curl -S https://getcomposer.org/installer | php
没有问题的话，会提示 All settings correct for using Composer ，然后会去下载一个文件  ...  这里会提示已经把 composer下载到了当前的目录里面。
ls 查看一下  ... 就是这个 composer.phar  ....  使用它的话，可以这样  ...  输入 php composer.phar
这里会出现一些帮助信息。表示我们现在已经可以用它去做点事了。
不过如果你想在服务器的任何地方去使用 composer 的话，我们还需要去设置一下。可以把 composer.phar 这个文件放在系统的环境变量里面的某个目录里面。查看这些目录  ...  可以这样，输入 echo $PATH  ... 
你可以把 composer.phar 放在这里出现的任何一个目录里面。 我们可以把它放在 /usr/local/bin 这个目录里  ...   用 mv 命令可以移动文件 ..
因为这个移动的操作需要用到超级管理员的权限，所以先输入一个 sudo ，然后再用 mv ，要移动的是 composer.phar 这个文件  ... 移动到的目录是 /usr/local/bin，放到这个目录里以后我们可以再给它重命令一下，去掉后面的 phar  ... 直接把它命名为 composer  .. 
mv composer.phar  /usr/local/bin/composer
现在，我们不管在哪里，都可以使用 composer 了  ...   可以直接输入 composer   ....


01-02-安装 drush

drush 可以让我们使用命令行工具去控制 drupal ，管理模块，用户，修改网站的配置，清空缓存，这些平常会用到的操作，我们都可以通过命令行去做。这个视频我们先去安装一下 drush 。
drush 推荐的安装方法是使用 composer 去安装，在上一个视频里我们已经在服务器上安装了 composer 。下面我们再去用 composer 安装一下 drush 。
输入 composer global，global 表示允许在 composer 全局目录里面运行命令 ...   require ，它表示把东西放到 composer.json 里面，然后再去安装它们。
后面是要安装的东西  ...  drush ... 一个斜线，然后再指定一下要安装的版本，现在稳定版是 drush 6 ，不过如果你想用 drush 去控制 drupal 8 的话，需要第 7 个版本的 drush ，目前这个版本还是正在开发的状态。
这里我们可以先去安装一个 drush 7 的开发版 ...  后面加上一个 drush:dev-master  ...  表示当前正在开发的版本 ...
composer global require drush/drush:dev-master
不过使用 composer 在国内下载会比较慢，需要等挺长时间，在这条命令的后面我们可以再加上一些东西，先加上一个 --prefer-dist ，表示我们不想去下载带版本控制的东西  ...  跟它对应的是 --prefer-source  .... 
后面再加上一个 -vvv ，它可以显示在安装过程中的更详细的信息，这样你会知道 composer 正在做什么  ... 最后再加上一个 --profile ，它会显示耗费的内存还有时间  ... 
回车 ... 去执行这条命令 ...   大概需要等五六分钟 ... 
这样 composer 会去找出 drush 还有它依赖的东西 ...  把它们统统都下载下来  ...  完成以后我们可以去看一下  ...   先进入到用户的主目录下面  ... 
ls -la 
查看一下这个目录里的东西 ... 这里会有一个  .composer 的目录  ...  
cd .composer
查出它里面的东西 ...  你会看到一个 vendor 目录  ...   再进入到这个目录
cd vendor 
在这个目录里面，你会看到 composer 下载下来的东西 ... 这里有 drush ，还有一些其它的东西 ... 
想要可以去执行 drush 命令，我们需要把这个目录下面的 bin 这个目录，添加到系统的环境变量里面 ... 
可以去编辑一下主目录下面的 .bash_profile  ...  
vim ~/.bash_profile 
按一下小 i 键，进入编辑模式 ..   然后插入一条代码  ... 
export PATH="$HOME/.composer/vendor/bin:$PATH"
esc ，再输入 :wq  ... 保存并退出  ... 
然后再用 source 去执行一下 .bash_profile  ...  
source ~/.bash_profile 
再输入 drush  ... 
现在，你可以看到一些跟 drush 命令相关的帮助信息  ... 说明，现在我们已经可以去使用 drush 了 ....
再输入一个 drush status  ... 会显示一些状态信息 ...   这里会有 PHP 的地址，配置文件， drush 的版本等等  ....


01-03-使用 drush 命令下载 drupal

这个视频我们可以使用 drush ，再配合一起其它的命令，去安装一下 drupal 。先进入到你想存放 drupal 的地方。 这里我要把网站放到根目录下面的 vagrant 这个目录里面。在这个目录里面，我已经设置好了，www 是网站的目录，已经跟我的 nginx 服务器绑定好了。
具体你要把 drupal 放在哪个目录下面，取决于你自己的配置。你可以参考宁皓网的两个课程，一个是 阿里云 ecs ，还有就是 vagrant 开发环境。
cd /vagrant 
下面我们可以使用 drush 去下载 drupal   ...  输入 drush dl ，dl 是 pm-download 这个命令的一个别名。pm 是项目管理的意思，download 是下载的意思。要下载的就是 drupal  ...  如果直接回车，drush 会去下载最近的稳定版的 drupal ，现在应该就是去下载最新的 drupal 7 。
如果你想下载其它版本的 drupal  也可以，比如要下载正在开发的 drupal 8 ，可以在这里加上一个 -8  ...
这里我们还是先去下载一下 drupal 7，这里也可以指定一个更具体的版本，比如 7.30 ，一会儿我们可以再去看一下，怎么样去升级 drupal    ...   
如果你想看一下 drush 在执行命令的时候都做了些什么，可以加上一个 -v 选项 ...   v 就是 verbose ，表示显示更详细的信息  ... 或者也可以用一个 -d 选项 ... d 就是 debug ，表示调试，这个选项可以显示更多的信息。
这里我们加上一个 -v 选项 ...
drush dl drupal -v
回车  ...  你会看到，drush 会先去给我们下载 drupal 的压缩包 ... 这个下载的压缩包会放在一个临时的目录里面，完成以后会检查一下，没有问题，会去解决它 ... 再把解压以后的东西放在我们当前所在的目录下面 ... 
ls 
查看一下当前目录里的东西  ... 这里会有一个 drupal-7.30  ... 
下面，我们可以重命名一下它  ... . 使用 mv 这个命令 ... 要重命名的是 drupal-7.30  ...  命名为 www ，因为我在配置 nginx 服务器的时候，把根目录下面的 vagrant 下面的 www 这个目录设置为网站的主目录  ...  
mv drupal-7.30 www 
这样我们就可以在浏览器里面打开 drupal 去安装它了  ...  先查看一下服务器的 ip 地址  ... 输入 ifconfig  ....  复制一下 ...  然后打开浏览器 ...  把服务器的 ip 地址粘贴过来  ... 回车  ...
这里你会看到 drupal 的安装界面  ... 
在下面的视频里，我们再看一下怎么样使用命令行去安装 drupal 。


01-04-使用 drush 命令安装 drupal - drush site-install

下面， 我们去使用命令来安装 drupal  .... 先去给 drupal 准备一个数据库  ...   这里我们也可以去使用命令来创建一个数据库  ...  先登录到 mysql  ... 
mysql -u root -p 
输入 mysql 管理员的密码  ...  回车 ...   
登录以后再用 create database 命令去创建一个数据库  ...  create database 后面加上要创建的数据库的名字  ...  ninghao  ... 再输入一个分号 ... 回车  ..
create database ninghao;
然后再去给这个数据库添加一个专门的用户 ...  让这个用户只能去管理这个数据库 ... 
grant all privileges on ninghao.* to 'ninghao'@'localhost' identified by '123456';
这行命令会创建一个叫 ninghao 的用户，密码是 123456 ，这个用户在 ninghao 这个数据库的所有的数据表上拥有所有的权限。
exit
退出一下  ... 
然后进入到我们在上一个视频里下载的 drupal 这个目录里面  ... 
cd www
在安装 drupal 之后我们可以先去下载一下 drupal 简体中文的语言包 ...   你可以在这个地址里找到语言包的下载地址 ....
这里我们用 wget 去下载一下 ...   这里再用一个 -P 选项  ...  然后指定一下下载到的地址 ...  把它放在 profiles 下面的 standard 里面的 translations 这个目录的下面 ... 
wget http://ftp.drupal.org/files/translations/7.x/drupal/drupal-7.30.zh-hans.po -P profiles/standard/translations/
安装 drupal ，可以使用 drush site-install  ...  我们可以先查看一下这条命令的帮助信息 ... 加上一个 -h 选项。
drush site-install -h
这里会显示我们在安装 drupal 的时候可以配置的一些选项 ...   最后这里，有一个 Aliases  ...  这是这条命令的一个别名  ...  也就是你可以使用 drush si ，去安装 drupal 。
下面，我们去用这条命令安装一个 drupal 。
drush site-install  后面指定一下要安装的 profile  ...  不同的  profile 会给我们启用不同的模块 ... 默认 drupal 有两个 profile ，standard ，还有 minimal ，这里我们选择 standard  ... 
再设置一下数据库的信息，用一个 --db-url 选项 ... 等于 mysql://  数据库的用户名 ... ninghao ，一个冒号，再加上这个用户的密码  ...  123456 ，@localhost ，一个斜线，再加上数据库的名称  ... 这里也就是 ninghao 
输入一个空格  ...  再加上一个 --site-name 这个选项 ... 设置一下网站的名字  ...  可以再设置一下网站的语言 ... 用一个 --locale 选项  ...  设置成 zh-hans ，简体中文  .. . 
另外还有一些可以设置的选项，你可以查看这个命令的帮助信息。  如果你想看到安装的过程都做了什么，可以再加上一个 -v 选项  ... 
回车  ... 这样会给我们去安装 drupal 。
drush site-install --db-url=mysql://ninghao:123456@localhost/ninghao --site-name=ninghao --locale=zh-hans -v
这里会提示要去创建一个 settings.php 的配置文件，并且会删除掉 ninghao 这个数据库里面的所有的数据表 ... 
输入 y ，再按一下回车 ..
提示安装成功，并且会给我们创建一个管理员的用户，用户名是 admin ，另外还有一个默认的密码 ...  复制一下这个密码  ... 
下面，我们可以到浏览器上去看一下  ... 
输入服务器的 ip 地址  ... 回车  ...    这里你会看到一个刚刚安装好的 drupal 网站。 输入用户名 admin  ...  再把复制的密码粘贴过来  ... 点击 登录  ..
这样可能登录到 drupal 的网站上 ...


02-01-项目管理相关的命令 - pm

drush 里的一些 pm 开头的命令，就是跟项目管理相关的命令，pm 就是 Project manager ，项目管理，这些命令可以去下载，启用，禁用，卸载，升级项目。这里说的项目就是 Drupal 还有 Drupal 的模块。
其实之前我们已经用到了一个命令，就是 dl ， dl 是 pm-download 这个命令的一个别名。它可以去下载 Drupal ，还有 Drupal 的模块。
另外还有一些 pm 命令，我们可以查看一下 drush 的帮助信息。
输入 drush 后面加上一个竖线，再用 grep pm ，这样可以显示出所有带 pm 的命令  ... 
这些命令，你会发现都有对应的别名，使用这些别名更简单一些  ... 
pm-disable ，可以禁用模块，pm-download 可以去下载模块，pm-info 能查看模块的相关信息，比如模块的发行日期，版本号等等。
pm-list 可以给我们显示一个模块列表。pm-refresh 可以去刷新升级的状态报告 ... 
pm-uninstall 可以卸载指定的模块，pm-update，就是升级 drupal 核心还有指定模块用的。
在接下来的视频里，我们再去详细的介绍一下这里面的几个命令。


02-02-下载模块 - pm-download

要去下载一些模块，可以使用 pm-download ，它的别名是 dl   ...  确定先进入到 drupal 所在的目录  ... 再输入 drush dl 然后再加上要下载的模块的名字  ... 这个名字我们可以在 drupal.org 上面找到。
先打开浏览器去看一下  ...   
比如我们要下载 pathauto 这个模块  ...  先打开这个模块的页面  ...   在 dl 后面要加上的模块的名字，就是这个模块页面地址上面的这个名字  ... 这个 pathauto 就是 Pathauto 这个模块的名字  ... 
回到命令行  .. . 输入 pathauto ...  如果还要下载其它的模块，可以用一个逗号分隔一下 ..   
drush dl pathauto
回车  ...   drush 会去下载这个模块的推荐版本，并且把它放在我们的模块的目录下面  ... 
想要查看一下这个模块的相关信息，用的是 pm-info 这个命令 ...    drush pm-info ，或者我们也可以使用它的别名  ... pmi  ...  后面加上模块的名字 ... pathauto ..
drush pmi pathauto
这里会显示出这个模块的版本  .... 发布的日期  ...  状态是 not installed ，表示我们还没有去安装这个模块  ...   最后这里还有这个模块的配置的界面的地址  ... 
默认 dl 命令会给我们下载最新的推荐使用的版本  ..  不过有时候，我们可能希望自己手工去选择要下载的版本  ..    可以用一个 --select 选项  ... 
drush dl .... 再去重新下载一下 pathauto 这个模块   ...   这里再加上一个 --select  ...  这样会给我们一个列表  ...  可以去选择要下载的模块的版本 ... 这个列表会按更改的日期排列  ... 有时候你可能希望去使用 dev 版本的模块。因为很可能修正了最新的一些错误 ...  
drush dl pathauto --select
这里先选择去下载这个 alpha 版本的 pathauto  ...   因为等会儿，我们再看一下怎么样去升级模块  ... 
输入 3   ... 然后回车  ...   因为这个模块已经在模块的目录里面了，所以重新下载它的话，会出现一个提示，是否要覆盖掉之前下载的模块  ... 输入 y ，再按一下回车  ... 
再查看一下这个模块  ... 
drush pmi pathauto 
在 Version ，模块的版本这里，会显示，现在它是一个 alpha 版的模块  ...


02-03-启用模块 - pm-enable

要启用一个模块，用的是 pm-enable 命令  ..  同样这个命令也有一个简写形式  ...  就是 en  ...  下面我们用这个命令去启用一个之前下载的 pathauto 这个模块  ...  drush en  ... 加上要启用的模块 ... pathauto  ...  回车  ..
drush en pathauto 
这里会出现一个提示 ..  说这个 pathauto 模块依赖一个叫 token 的模块，也就是我们需要先安装 token 模块才能使用 pathauto 这个模块  ...  输入 y  ... drush 会直接去给我们下载需要的模块  ...  
这里又会提示，是否要启用这两个模块  ...  再输入一个 y ，然后再回车  ...  在这个命令的后面，可以再用一个 -y 选项  ...  这样，出现这样的确认提示，drush 会自动给我们输入 y ，然后继续去执行  ... 
ctrl + C ....   退出执行这行命令  ...    再去试一下  ...  这次加上一个 -y 选项  ...
drush en pathauto -y
这样就不需要去确认了  ... 
下面我们可以找开浏览器去看一下  ...   用管理员登录以后，点击 模块  ... 在这个模块的管理界面  ... 最下面  ... 你会看到，pathauto，还有 token 这两个模块都已经被启用了  ... 
在使用 pm-enable 命令去启用模块的时候，如果这个模块不存在，它会自动去下载它，然后再启用它，这样就不需要使用 pm-download 先去下载，然后再去启用这个模块了。
回到命令行工具，再来试一下 .... 比如我们要启用 flag 这个模块  ...  输入 drush en flag  ..    提示没找到这个模块，要去下载它吗？  输入 y  ... 再按一下回车 ...
drush en flag
这里你会发现，这个 flag 项目包含了三个模块，flag_bookmark，flag，还有 flag_actions  ...  这里我们只要求去启用这其中的 flag 模块，所以，flag 项目的 flag_bookmark，还有 flag_actions 是不会被启用的 ... 
提示要启用 flag 模块吗？ 输入 y ，回车  ... 
启用成功  ...  这里还会提示 flag 这个模块里面定义的权限  ...  administer flags，还有 use flag import  ...  这些权限你可以在用户管理界面上找到，并且去设置它们。


02-04-禁用模块 - pm-disable

在 Drupal 7 的管理界面上，默认会有一个 overlay 模块，它的功能就是，可以在当前的窗口的上面显示一个新的层来显示管理界面  ... 有时候你可能不需要这个功能。我们可以去禁用一下这个模块 ... 
下面， 我们使用命令去禁用模块  ... 回到命令行工具 ... 
禁用模块用的是 pm-disable  ... 它的简写形式是 dis   ... 输入 drush dis ，再加上要禁用的模块   .. overlay 
drush dis overlay
提示要禁用 overlay 这个模块吗？输入 y ，再按一下回车 ...   如果你不想确认的话，可以直接在命令的后面加上一个 -y 选项  ... 
提示禁用成功  ...  再查看一下这个模块  ...
drush pmi overlay
现在的状态是 disabled ... 已经被禁用了  ...  再回到浏览器  ...  刷新一下  ... 现在，你会看到管理界面就不会在新的层上显示了 ... 因为已经禁用了 overlay 这个模块  ...


02-05-卸载模块 - pm-uninstall

有些模块在安装的时候，很可能会在数据库里面创建一些新的数据表，这些数据表在禁用模块的时候，是不会被删除掉的。只有在卸载的时候，才会被删除掉。下面， 我们来看一下模块的卸载。
这里我们在一个新的命令行窗口里面登录到服务器  ...  command + T   ....    然后输入 vagrant ssh  ...  因为我用的是 vagrant 搭建的本地的开发环境 ...  
Windows 用户应该需要使用 putty 这个小工具登录到服务器 ...  登录以后，再登录到服务器的 mysql  上  ...   mysql -u root -p  ... 回车 ... 再输入密码  ... 
先切换到 drupal 用的数据库  ...  use ninghao;    
再查看一下这个数据库里的数据表  ...   show tables; 
在这里，显示的就是 durpal 使用的数据库里面的所有的数据表  ...  这里你会看到几个 flag 开头的数据表  ...  它们就是在安装  flag 模块的时候给我们创建的几个数据表  ... 
下面，我们可以去卸载一下这个 flag 模块  ...  
首先需要先禁用掉要卸载的模块  ...  drush dis flag  ... 
然后再用 pm-uninstall  ... 去把它卸载掉  ...   这个命令的简写形式是 pmu   ...  drush pmu flag   ....  回车  ... 
输入 y   ... 再按一下回车  ... 
提示成功以后，我们可以再去查看一下 drupal 数据库里的数据表 ...  
show tables;
现在，在这个数据表的列表里面，就不会再有 flag 开头的数据表了  ... 因为卸载掉了 flag 模块，就会把安装它的时候创建的数据表也删除掉  ...


02-06-升级 Drupal 核心与 Drupal 模块 - pm-update

使用 drush 可以很容易去升级 Drupal 核心还有 Drupal 的模块。先打开浏览器  ... 登录以后，打开 报告 ... 可用更新 ...  在这里会显示是否要更新 Drupal 还有 Drupal 的模块。
一般只要出现安全的更新，你都需要去升级一下你的 Drupal  ...   
这里提示说，Drupal 的核心需要更新  ...  当前的版本是 Drupal 7.30，最新的版本的是 Drupal 7.31   ... 
另外，在下面，还有一个可以更新的模块  ...   就是这个 Pathauto 模块  ...   下面，我们去使用命令行升级一下它们。
可以先去刷新一下这个要更新的信息  ...  drush pm-refersh   ... 这个命令有个简单的形式，就是 rf  ...  
然后再查看一下可用的更新  ...   这里用的是 pm-updatestatus   ... 
drush pm-updatestatus
这里会提示 Drupal 的核心，还有 Pathauto 有可用的更新  ...   下面，我们先去升级一下 Drupal  ..    升级用的是 pm-update 命令  ...  这个命令的简写形式就是 up  ...
不过在升级 Drupal 核心的时候，我们可以先打开网站的维护模式  ...  使用 drush ，可以这样  ... 
drush vset ，vset 是 variable-set 命令的简写形式，也就是设置变量用的命令  ...  然后是 maintenance_mode  ... 维护模式 ... 设置成 1 。就是打开维护模式  ... 
drush vset maintenance_mode 1
成功以后，可以到浏览器上去看一下  ... 
这里会提示网站现在是维护模式  ... 管理员还是可以访问网站  .. 不过一般的用户会看到一个维护的提示页面  ...   这里可以退出一下  ...  
会提示，网站正在维护  ... 
再回到命令行工具  ...  输入 drush up drupal   ...  升级  Drupal 核心  ... 
drush up drupal 
回车  ... 提示现在的 Drupal 版本是 7.30 ，要升级到的是 7.31  ....   这里还会显示一个警告说，升级之前最好先备份一下，并且要经过测试，确定没有问题以后再升级。
要继续吗？输入 y  ...  再按下回车  ...  
这样 drush 会去下载 drupal ，解压以后，会去把我们的网站，除了 sites 这个目录以外，放在 drush 的备份的目录里面，我这里就是 /home/vagrant/drush-backups/ninghao 这个目录  ... 
/home/vagrant/drush-backups/ninghao/20140828105136/drupal
升级成功以后，我们可以查看一下当前的 Drupal 的版本  ...  输入 drush status  ...   你会看到，现在已经升级到了 Drupal 7.31   .. 
下面，再去升级一下 pathauto 这个模块  ...  这里加上一个 -y 选项，这样就不用再确认了  ... 
drush up pathauto -y
成功以后，再查看一下可用更新 ... 
drush pm-updatestatus
现在已经没有可以更新的东西了  ...    最后我们再去关掉网站的维护模式，把网站恢复到正常的状态  ... 
drush vset maintenance_mode 0


03-01-用户与角色

drush 的核心里面带了一些跟用户还有用户角色相关的命令。用户就是使用我们网站的人，用户的角色可以表示一个用户的群组，或者表示用户拥有的特权。每个用户角色可以拥有属于自己的权限，这些权限就是可以在我们的网站上做的事情。比如发布内容，编辑内容，发表评论等等。
查看跟用户相关的命令可以这样，输入 drush | grep user-  ...  查看一下用 user 开头的命令  ... 
user-add-role 可以给指定的用户去添加指定的角色，对应的还有一个 user-remove-role 他可以移除掉用户上的角色。user-block 可以要阻止用户，让用户不能登录到我们的网站，对应的还有一个 user-unblock ，可以解除阻止用户。user-create 可以创建用户，user-cancel 是取消用户用的。
user-login 可以生成一个一次性的登录链接，也就是用户点击这个链接以后不需要输入用户名还有密码，可以直接登录到网站，一般就是重置密码用的。
想去重新设置用户的密码，可以使用 user-password 这个命令。
角色
下面，我们再看一下用户角色相关的命令 ... drush | grep role-  ... 查看一下 role 开头的命令，role 就是角色的意思。
这里的 role-add-perm ，可以给角色去分配指定的权限，要移除掉角色拥有的权限，可以使用 role-remove-perm ，这里的 perm 应该就是英文 permission 的简称 .. role-create 可以创建新的用户角色，role-delete 可以删除已有的角色。
在下面的视频里，我们就一起去试一下这里面的一些命令。


03-02-用户管理

下面我们先去看看用 drush 管理网站上的用户。我们可以先去创建一个用户，可以使用 user-create 这个命令  ...  输入 drush user-create  ... 后面加上要创建的用户的名字 ...    xiaoxue  ...  小雪就是要创建的这个用户的名字  ...   user-create 这个命令还有一些选项，在创建用户的时候可以加上。 
先加上一个 mai   ...  可以设置一下用户的邮件地址 ...  注意这个选项名字的前面是两个横线   ...  然后再用一个等号，等号右边就是这个选项的值   ...  xiaoxue@ninghao.net   ...    再加上一个密码的选项  ...  --password   ... 
drush user-create xiaoxue --mail="xiaoxue@ninghao.net" --password="123456"
回车  ...  这里我们就用命令创建了一个新的用户，用户的名字是小雪，她有 email 是 xiaoxue@ninghao.net ，密码是 123456  ...  
这行命令会返回一些有用的信息  ... 用户的 id 号，用户名，邮件地址，另外还有用户的角色   ...  authenticated user ，就是我们经常看到的注册用户这个角色  ...    最后还有一个用户的状态  ... 现在是 active ，表示用户能够正常登录网站。 这里显示的信息其实就是 user-information 这个命令返回来的信息。
下面，我们用小雪这个用户去登录一下 ...  打开浏览器   ...  输入用户名 ...  xiaoxue   ... .  再输入密码 ..   然后点击登录  ... 
成功以后，可以打开 我的帐户来看一下  ...   现在我们已经用 xiaoxue 这个用户登录到了网站   ...  
要阻止这个用户登录，可以使用 user-block 命令  ..  回到命令行   ..  drush user-block xiaoxue  ...    现在小雪这个用户就不能登录了  ...  我们可以查看一下她现在的状态 ...   drush user-information xiaoxue  ...  这里，user status ，也就是用户的状态现在是 blocked  ... 表示现在 xiaoxue 这个用户是被阻止的状态  ... 
回到浏览器  ... 刷新 ...  会退出登录  ...  再试着去登录一下 ...   xiaoxue  ... 123456  ...   这里会出现提示，说 xiaoxue 这个用户现在是未激活或者被屏蔽的状态 ... 
要解除阻止，用的是 user-unblock   ...  再回到命令行  ...  drush user-unblock xiaoxue  ...   现在，xiaoxue 就又可以登录了 ...  
想要删除掉用户，我们可以使用 user-cancle 这个命令  ...   drush user-cancel xiaoxue ...   回车  ... 提示要取消这个用户吗？ 输入 y  ... 再按一下回车  ... 
执行成功以后，会提示，已经删除掉了 xiaoxue 这个用户。


03-03-找回用户的密码

找回用户的密码，可以使用 user-login 这个命令，我们可以为指定的用户生成一个一次性登录的链接，也就是，打开这个链接以后，不用输入用户名还有密码，就可以登录到网站。登录以后，用户可以为自己重新设置密码。或者，我们也可以直接使用 user-password ，去为指定用户设置新的密码。
我们可以先去创建一个用户  ...  drush ucrt  ..  ucrt 就是 user-create 命令的简写形式 ... 后面加上用户的名字  ... xiaoxue  ...   加上一个 mail 选项，设置一下邮件地址 ...   mail 等于 xiaoxue@ninghao.net  ...  回车  ... 
drush ucrt xiaoxue --mail='xiaoxue@ninghao.net'
现在我们创建了一个叫小雪的用户，但是没有为她设置密码  ...   下面我们先试一下 user-login 这个命令 ... drush user-login  ... 后面加上用户的名字  ... xiaoxue ... 
drush user-login xiaoxue 
这里给我们返回了一个一次性的登录的链接  ...   前面这个 default 是网站默认的地址  ... 我们可以修改这个默认地址  ...  先复制一下它后面的这些东西 ...   回到浏览器  ...  粘贴到网站首页地址的后面  ...  然后回车 ...
你会发现，现在我们已经用 xiaoxue 这个用户登录到了网站  ...     这里可以去编辑一下个人档案，去设置一下密码  ... 
再回到命令行  .... 下面，我们再试一下 user-password 这个命令  ...   drush user-password  ...  先指定一下要设置密码的用户 ... 这里就是 xiaoxue  ... 后面再加上一个 password 选项  ...  再指定一下要设置的密码  ...  
drush user-password xiaoxue --password=123456
提示 Changed password for xiaoxue  ... 表示已经为 xiaoxue 这个用户重新设置了密码  ...  现在， xiaoxue 就可以使用这个新的密码登录到网站了。


03-04-角色管理

我们可以先查看一下 drupal 里面的所有的用户角色。 输入 drush role-list  ...  role-list 有个简写形式，就是 rls  ...   这里显示的就是网站里面现有的用户角色。
匿名用户，注册用户，还有 administrator  ...   
要创建一个新的用户角色可以这样  ...  drush role-create  ... 。  在为 drupal 7 创建用户角色的时候，在这个命令后面直接加上要创建的角色名字就行了，如果为 drupal 8 创建用户角色，第一个参数会是用户角色的一个机器名，第二个参数是显示给用户的一个角色的名字 ... 
输入用户角色的名字  ...  member  ...   回车  ... 再去查看一下现有的角色列表  ...  drush rls  ...  rls 是 role-list 的简写形式  ...   这里会出现刚才我们创建的 member 这个角色  ... 
要删除这个角色可以用 role-delete 命令  ...  drush role-delete   ... 后面加上要删除的角色的名字  ...  member   ... 回车  ... 再查看一下角色列表  ... drush rls  ... 这里就不会再显示 member 这个角色了。


03-05-角色权限

这个视频我们来看一下用户角色的权限，下面我们先去创建一个新的用户角色   ..  drush role-create  后面加上要创建的角色的名字  ... 输入 author  ...   回车 ... 现在我们的 Drupal 网站里会多出一个角色，叫做 author ...   
drush role-create author 
给角色添加他能做的事，用的是 role-add-perm  ...    drush role-add-perm ...  后面加上要添加权限的角色 ...  输入 author  ...   然后再加上具体的权限的名字 ...   不过记住权限的名字有点难 ... 这里我们可以使用模块的名字  ... 这样命令会给我们显示出一个跟这个模块相关的权限的列表 ...   加上一个 module 选项 ...  再等号右边指定一下模块的名字 ...   先输入 node  ... 然后回车  ... 
drush role-add-perm author --module=node
这里显示的就是跟 node 这个模块相关的所有的权限  ...  我们可以直接在这里去选择想要给 author 这个角色的权限 ...   先给它一个 create article content 这个权限   ...  它个权限可以让拥有 author 这个角色的用户创建文章内容 ... 
输入这个权限的代号  ...   10  ... 然后回车 ... 
这样 author 这个角色就拥有了这个权限，想要从这个角色里移除掉权限，可以使用 role-remove-perm 这个命令 。
下面， 我们可以找一个用户，给他分配一个 author 角色  .. 这样这个用户就可以去创建文章内容了 ...   为用户添加角色，用的是 user-add-role  ...   drush user-add-role  ... 后面先加上要给用户的角色的名字  ...    输入 author ....  然后再指定一下用户  ...  这里我们给之前创建的 xiaoxue 这个用户分配一个角色 ...  输入 xiaoxue  ...    回车  ... 
drush user-add-role author xiaoxue
再查看一下 xiaoxue 这个用户的信息  ...  drush user-information xiaoxue  ...   回车  ... 你会发现， User foles 这里，会多出一个角色，就是 author   ... 
如果你想移除掉在用户上面的角色，可以使用 user-remove-role 这个命令 ... 
下面再打开浏览器  ...   我们可以使用小雪这个用户登录一下 ...   输入用户名， xiaoxue ，再输入密码  ... 123456   ...  点击 登录   ..
成功以后，在边栏上，会显示一个 添加内容 的链接  ...    打开这个链接  ... 会显示一个创建文章内容的表单  ..  这是因为我们为 xiaoxue 这个用户添加了 author 这个角色，我们又给这个角色添加了可以创建文章内容的权限。所以，这里才会显示一个创建文章内容的表单。


04-01-更新翻译 - l10n_update

在安装了一些模块以后，默认这些模块都会使用英文，也就是模块界面上的文字都是英文的，即使我们的网站语言设置的是简体中文或者繁体中文。想让这些模块界面上的文字变成中文，需要去下载这个模块的中文翻译，然后通过 Drupal 的翻译界面导入这些中文翻译  ... 
这里我们可以使用一个叫 l10n_update 模块，它可以自动去更新模块的中文翻译。打开命令行的工具  ... 进入到 Drupal 所在的目录  ...   先去下载一个模块 ... 比如 backup_migrate 这个模块，它是备份 Drupal 用的一个模块。
输入 drush en backup_migrate -y  ...    回车  ...  安装好以后，可以查看一下这个模块的管理界面 ...   drush pmi backup_migrate  ...    回车   ... 在 Configure 这里显示的就是这个模块的配置的界面  ..  复制一下这个地址  ... 
再回到浏览器 ... 用管理员的身份登录到网站  ..  打开 backup_migrate 这个模块的管理界面  ...   
你会发现，现在界面上的文字都是英文的  ...  下面，我们再去安装一下  l10n_update 模块，然后去更新一下网站的翻译  ...  回到命令行  ...  
先去下载一下 l10n_update 这个模块  ... 因为我们要选择一下要下载的版本，所以这里可以用一个 --select  ...  选择 2.x 的开发版 ..
drush dl l10n_update --select
再去启用一下这个模块  ...   输入 drush en l10n_update -y  ...  
安装好以后，提示 translations 这个目录不存在，或者没有写入的权限。这里用 mkdir ，在 sites/all 这个目录的下面， 去创建一个叫 translations 的目录 ...  
mkdir sites/all/translations
有些模块会跟 drush 集成到一块儿，也就是这些模块可能会定义专门的命令，去做一些特别的事情 ...   这个 l10n_update 就有一些相关的命令  ...  输入 drush | grep l10n
查看一下包含 l10n 字符的命令 ...   如果没有找到这些命令的话，你可以清空一下 drush 的缓存，可以使用 drush cc  这个命令 ..
这里显示有三条命令  ... 我们可以先用 l10n-update-refresh 去刷新一下可用的翻译更新  ... l10n-update-status，可以查看可用的翻译的更新  ...   用 l10n-update ，可以去执行翻译的更新。
先输入 drush l10n-update-refresh  ... 回车 ...   再查看一下可用的更新  ...  drush l10n-update-status  ...   提示 backup_migrate 这个模块有可用的翻译更新  ... 
再输入 drush l10n-update   ... 回车  ...    drush 会去下载模块的翻译文件 ...  然后再把它们导入到网站的数据库里面  ... 
完成以后  ...  再回到浏览器看一下  ... 
打开 backup_migrate 这个模块的管理界面  ...  刷新  ...   你会看到，这个模块上的语言已经变成了简体中文  .. 不过这里你仍然可以看到，有些地方还会显示英文，这是因为，模块是社区成员翻译的，有的时候，不是所有的模块都有完整的管理  ...  你可以把这个模块的中文翻译导出成一个 po 文件，把模块的翻译导出为一个文件，可以给网站安装一个 potx 这个模块  ... 然后再用 poedit 这个软件去编辑一下，也就是去为没有翻译成中文的字符串添加中文翻译。
翻译完成以后，再用 Drupal 的翻译界面，再把这个翻译文件导入到 Drupal 里面。另外如果你想直接在 Drupal 的后面去为没有翻译的字符串添加中文翻译，可以去安装一个叫 l10n_client 的模块。
https://www.drupal.org/project/l10n_client


05-01-备份 - archive-dump

使用 drush 的 archive-dump 这个命令，可以把 Drupal 的代码还有数据库打包成一个压缩文件。想要恢复的话，再用 archive-restore 去恢复一下。
先用浏览器打开我们的网站  ...   用管理员的身份登录以后，可以再去创建一个新的内容  ...   输入标题 ...   hello ninghao  ...  再输入点内容  ...  这是一个测试：）  .. 保存 ... 这样一会儿再恢复网站的时候，我们会知道是否真正恢复了 ..  
再回到命令行工具 ...  进入到 Drupal 所在的目录 ... 然后输入 drush archive-dump  ...  如果回车执行这行命令的话，drush 会把当前这个 Drupal 默认的站点还有它的数据库打包成一个压缩文件。因为 Drupal 支持多站点，所以，你可以在这里去指定一下要备份的站点的名字 ...  不指定就会去备份默认的站点。
另外这个打包成的压缩文件，也可以为它指定一个目的地，可以加上一个 --destination 选项去设置一下。不设置的话，会存储在 drush 默认的备份目录里面 ... 这里我们直接按一下回车，去执行一下这行命令  .. 
drush archive-dump 
你会看到 drush 会先去把网站的数据库导出来，存储成一个 .sql 的文件。然后跟网站的代码一块儿打包成一个压缩文件 ...   在我这里，这个备份的文件，存储在 根目录下面的 home，vagrant，drush-backups，archive-dump 这个目录里面，在这个目录里，会创建一个用时间命名的目录，在这个目录里面，会有这个备份的压缩文件，文件的格式是 .tar.gz  ... 
下面，我们可以进入到这个目录里面  ...   cd  ....  查看一下这个目录里的东西  ...  ls  ...   然后再解压一下这个压缩包  ..  看看里面都有什么东西 ... 
可以使用 tar 这个命令  ...  tar ，后面加上几个参数...  -zxvf  ... 再加上压缩包的名字 ..  列出当前目录里的东西  ...   输入 ls  ... 回车  ... 
这里会有一个 .sql 的文件，它就是导出来的一个数据库文件，这里会包含数据表的结构，存储在表里面的数据等等  ...  我们可以使用工具，再把这个 .sql 里面的东西导入到数据库里面。
另外这里备份的压缩包里，还有一个存储网站代码的目录  ...  我这里就是 www 这个目录 ... 因为我把 drupal 的代码放在了一个叫 www 的目录里面，所以备份的时候，也会使用这个目录的名字  ...     再查看一下这里面的东西，输入  ls www  ...     回车  ... 
显示出来的就是 Drupal 的代码，这里会包含 Drupal 的核心，还有我们自己安装的模块和主题  ...   如果你不想备份 Drupal 的核心，可以在执行 archive-dump  命令的时候，添加一个 --no-core 选项 ... 这样只会备份我们自己的东西，也就是 sites 这个目录里的东西。
除了这两样东西以外，这个备份的压缩包里还有一个配置文件 ... 就是这个 MINIFEST.ini  ...   这里用一个cat 命令，输出这个文件里的东西  .. 
这里会包含备份的时间，网站的根目录  ...  站点的目录  ...  网站上传的文件存储的位置  ...  数据库文件  ...  还有网站使用的数据库引擎  ... 
在用 archive-restore 命令恢复的时候，会用到这个配置文件里的一些信息。在下面的视频里，我们再去看一下怎么样恢复这个备份。


05-02-恢复 - archive-restore

这个视频我们去恢复一下之前的备份的网站。在恢复之前，先去把现在的网站删除掉 ...  先用浏览器打开现在的网站看一下 ...  可以正常打开  ... 首页上有一个内容  ... hello ninghao  ... 再回到命令行 ... 
进入到网站所在的目录的上一级目录  ...  然后用 rm 删除掉 www 这个目录  ... 这个目录里的东西就是 Drupal 的代码  ...   rm -rf  www  ...  回车  ... 成功以后，再回到浏览器  ... 刷新  ...  网站现在已经打不开了，因为文件被我们删除掉了 ... 
回到命令行  ...   再把网站的数据库也删除掉  ...   这里可以使用 mysqladmin  ...  加上一个 -u 选项，指定一下管理员的用户名 ...  root  ... 再加上一个 -p 选项，然后用 drop 去删除数据库，要删除的是 ninghao 这个数据库  ...   回车  ... 
mysqladmin -u root -p drop  ninghao;
提示要删除 ninghao 这个数据库吗，输入 y  ...   按下回车  ...    然后我们需要再去创建一个 ninghao 这个数据库  ...  因为一会儿恢复网站的时候，需要用到这个数据库来存储网站的数据  ..  创建数据库，也可以用 mysqladmin 去做  ...  这里用一个 create  ... 加上要创建的数据库的名字 ...
mysqladmin -u root -p create ninghao;
drush 也可以允许我们在恢复的时候，指定用户，去创建网站需要的数据库。
下面我们再去恢复一下网站  ...   可以先进入到备份的压缩包所在的位置  ...   
然后输入 drush archive-restore  ... 指定一下压缩包的位置  ... 是在当前目录下面的这个 .tar.gz 文件  ...    如果直接执行这行命令，drush 会用默认的设置去恢复，比如网站使用的数据库仍然是备份前使用的数据库，网站的目录也会使用之前一样的目录  ...   这些设置，可以通过一个选项去修改，具体的选项，你也可以参考这个命令的帮助信息 ..
这里我用一个 --destination 选项 ... 指定一下恢复之后，网站所在的目录  ...   设置成 /vagrant/www
drush archive-restore ./...tar.gz --destination=/vagrant/www
回车 ... 去执行一下这行命令  ... 这样 drush 会把备份的压缩包解压，把网站的文件放在指定的目录里面，再把导出来的数据库文件，导入到对应的数据库里面。这里我们没有指定具体的数据库，这样 drush 会根据网站的 settings.php 这个配置文件里面的设置，把数据导入到对应的数据库里面。
成功以后，这里会提示把网站恢复到了 /vagrant/www 这个目录里面  ... 
回到浏览器  ...    再刷新一下  ...   你会发现，现在网站又可以打开了。因为我们已经把之前删除掉的网站恢复过来了。


05-03-导出与导入数据库

这个视频我们来看一下用命令导出还有导入 Drupal 网站的数据库。先进入到 Drupal 网站所在的目录  ...  我们可以先去把网站的数据库导出来 ... 把它保存成一个 .sql 的文件 ...  
在导出数据库以前，可以先清空一下 Drupal 的缓存   ...   drush cc  ...  cc 就是 clear-cache 这个命令的简写形式 ...  选择要清空的缓存  ...  这里选择 2 ，表示所有的缓存  ... 
drush cc
然后再去导出数据库  ...  输入 drush ，这里要用的是 sql-dump 这个命令  ...  加上一个大于号 ...  然后指定一下导出来以后要保存的位置  ...   这里我把它放在用户的主目录下面  ...   命令为 ninghao-backup.sql  .. 
sql-dump 这个命令还有一些选项，你可以查看一下命令的帮助 ....  
drush sql-dump > ~/ninghao-backup.sql
成功以后，再查看一下  ...   ls ~  ...  在用户的主目录下面，会有一个 ninghao-backup.sql  ... 这个文件就是刚刚我们导出来的数据库  ...   下面再试一下导入数据库的方法 ... 
我们可以先把网站当前使用的数据库里的所有的数据表都删除掉 ...  可以使用 sql-drop 这个命令  ...  drush sql-drop  ... 
提示确定要删除 ninghao 这个数据库里的所有的数据表吗？输入 y  ... 再按下回车 ..    再到浏览器上去看一下  ...  打开网站  ...  刷新  ... 会出现错误的提示  ... 因为网站用的数据库里的数据表被我刚才删除掉了 .... 
再回到命令行工具  ...   下面，把刚才导出的 sql ，再导入到网站用的数据库里面 ...   要用的是 sql-cli  ... 
drush sql-cli ... 加上一个小于号，表示导入 ... 再指定一下要导入到数据库的 sql 文件  ... 也就是在用户主目录下面的 ninghao-backup.sql  ... 
drush sql-cli < ~/ninghao-backup.sql 
回车  ...   成功以后  ... 再到浏览器上看看  ...   刷新  .. 现在网站又会显示正常了 ... 因为已经把数据库恢复到了之前的样子  ...


