01-01-安装 WP-CLI

这个视频我们一起去安装一下 wp-cli 这个工具。先打开它的官方的网站，http://wp-cli.org/，可以先把它下载下来，复制一下这个 Installing 下面的这行代码  …  就是这个 curl 开头的代码，使用 curl ，下载 wp-cli.phar 这个文件。
回到命令行的工具，用 ssh 登录到你的服务器，这里我用的是 vagrant 搭建的一个本地的开发环境。你可以参考宁皓网的 vagrant 开发环境这个课程。
连接到服务器以后，先进入到一个目录  … 这里我在的位置是登录的用户的主目录  …  把刚才复制的代码粘贴过来 … 然后回车  … 
这样会把 wp-cli.phar 这个文件下载到当前的目录下面  …  输入 ls ，查看一下 …  要使用这个 wp-cli 可以这样 …  先输入 php ，接着是 wp-cli.phar 这个文件的位置 … 现在这个文件是在当前的目录下面，所以可以直接使用它的文件名  …  后面再加上要执行的命令  .. 这里我们加上一个 --info 选项 … 
会返回一些有用的信息，比如 php 的位置，版本号，配置文件的位置等等。
如果你不想每次执行 wp-cli 的时候，都用这么复杂的方法，我们可以把它放到系统的环境变量里指定的目录下面，输出这些环境变量，可以这样，echo $PATH  … 在这里，我们可以把这个 wp-cli.phar ，放到这里列出的任何一个目录的下面。
比如，把它放到这个 /user/local/bin 目录下面  … 
在移动这个文件之前，可以再给它添加一个可执行的权限。输入 ls -la  … 这里你会看到，这个文件的拥有者所拥有的权限是 r ，表示读取，还有一个 w，表示写入，没有执行的权限 …  我们得给它添加一个可执行的权限。
这里用的是 chmod 命令  … 关于 linux 系统的权限问题，你可以参考宁皓网的 CentOS：在阿里云上运行网站 这个课程。
输入 chmod u+x ，表示要给文件的拥有者，添加一个 x 权限，也就是可执行的权限  …  后面加上文件名 …  wp-cli.phar 
chmod u+x wp-cli.phar
再检查一下  … ls -la  … 现在这个文件的拥有者，就拥有了可执行的权限  …  下面再把它放到环境变量指定的目录里面  …  用 mv 这个命令  .. .   这里需要超级管理员的权限，先加上一个 sudo  ..  然后是 mv ，要移动的是 wp-cli.phar 这个文件  … 移动到的目录是 /usr/local/bin ，移动以后，可以再重命名一下这个文件  … 命名为 wp  … 
sudo mv wp-cli.phar /usr/local/bin/wp
回车  …  输入 wp  …  回车 …   你会看到一些相关的帮助信息  … 
现在，不管我们在哪里，都可以直接使用 wp-cli 这个工具了。


01-02-使用帮助

查看 wp-cli 里面的命令，可以去它的官方网站，或者也可以直接在命令行工具里面，输入 wp --hlep 去查看  ..   先打开它的官方网站。wp-cli.org  … 
打开 commands  … 命令菜单 …   在这里，列出的就是 wp-cli 里面可以使用的一些命令 …   cache ，可以管理站点的缓存，cap，管理的是用户的权限。core，是跟 WordPress 核心相关的一些命令  … 
这些命令会包含一些子命令 … 比如这里我们先打开 user 这个命令  …   打开以后，又会列出一些子命令  …  add-cap，可以给用户添加权限，add-role，可以为用户添加用户角色  … create 可以创建用户，delete 可以删除用户。
点开具体的这个命令，会显示这个命令的详细的使用方法。比如打开 create 这个命令  …   在这里，会列出 user 下面的这个 create 命令的所有的相关的选项。也就是这个命令的具体的使用方法。
在执行命令的时候，我们需要看一下这个命令的这些具体的选项。这些选项，用尖括号包装的是必须要用的选项 …  也就是，你在执行这个命令的时候，必须要为这些选项指定具体的值。
另外还有一些用方括号包装的选项 … 这些是可选的选项。也就是在执行命令的时候，可以用，也可以不用。
在这个页面的最下面，会包含这个命令的使用示例。这里就是 user 下面的 create 这个命令的一个使用的示例。
下面，我们再回到命令行工具  …  在命令行工具下面，我们也可以直接得到命令的使用帮助 …  先输入 wp ，然后回车  … 
这里会显示一些有用的信息 … SUBCOMMANDS，就是可以使用的一些子命令  …   按一下键盘上的 F 键，可以向后翻页 ..    按下键盘上的 B 键，可以向前翻页 … 
退出，可以使用 Q 键  … 
要查看某个子命令的使用说明，可以先输入 wp ，然后再加上这个子命令  …  比如看一下 user 这个命令  … 输入 wp user  … 回车 … 
这里显示的是，是这个 user 命令的一个简单的使用说明  … 
想查看更具体的使用说明，可以再加上一个 --help  …  wp user --help  …     这里会给我们显示出 user 这个命令的一些选项，还有它包含的一些子命令  …


02-01-使用 WP-CLI 安装 WordPress：下载

安装 WordPress，我们可以完全使用几行命令去做。如果熟练这些命令的话，会比使用图形界面安装 WordPress 更有效率一些。使用命令安装 WordPress 需要四步，第一步是使用命令下载 WordPress ，第二步是为 WordPress 创建数据库，第三步是创建 WordPress 的配置文件，第四步是安装 WordPress。
下面，我们先去下载 WordPress  …  可以使用 wp-cli 的 core 命令的 download 这个子命令 …  打开 wp-cli 的官方网站，commands  … 找开 core 命令  …  然后再打开 download 这个子命令 …   
你可以看到，这个命令的功能就是 Download core WordPress files ，下载 WordPress 的核心文件。打开这个命令以后，会看到一些选项 ..   --path，可以指定把 WordPress 下载到的位置 …  --locale 这个选项可以指定要下载的 WordPress 的语言 …   --version ，可以指定 WordPress 的版本，另外还有一个 —force 选项，它可以强制覆盖掉已有的文件。
回到命令行工具 …   如果不想在下载 WordPress 的时候指定目录的话，你需要先进入到你想存储 WordPress 的那个目录的下面。这里我想把下载的 WordPress 放到根目录下面的 vagrant 这个目录里面的 www 这个目录的下面 …  这个目录是我的网站的根目录 …  先进入到这个目录的下面 … 
cd /vagrant/www
然后再去下载 WordPress ， 输入 wp core download ，这里我们要使用一个 --locale 选项，去指定一下想要的语言，如果要下载简体中文的话，把这个 --locale 选项的值设置成 zh_CN … 这个 zh_CN 是简体中文的代号 …  注意这个 CN 是大写的 …    要下载其它语言版本的 WordPress，就去使用对应的语言代号就行了，比如下载繁体中文，就把 --locale 选项的值设置成 zh_TW。
wp core download --locale=zh_CN
回车  …  你会看到，正在下载的是 zh_CN ，也就是简体中文版的最新的 WordPress 。下载完成以后，会把 WordPress 的文件解压出来，放到当前的目录下面。
输入 ls  …   这里出现的就是 WordPress 核心文件。 再输入 wp core version  …  回车  …  这条命令，可以查看当前的 WordPress 的版本号。
wp core version


02-02-使用 WP-CLI 安装 WordPress：创建数据库与配置文件

下载完 WordPress 以后，我们需要再给它去创建一个配置文件，也就是那个 wp-config.php 。 在这个文件里，需要指定一下 WordPress 使用的数据库，数据库的用户名，密码，网站的语言等等。
我们可以先去给要安装的 WordPress 创建一个数据库  …  这里可以使用 mysql 的 mysqladmin 这个小工具 …   关于 mysql 的使用，你可以参考宁皓网的 MySQL 基础教程。
输入 mysqladmin -u 指定一下拥有创建数据库权限的 mysql 的用户，这里我用的是 root 这个用户。然后再加上一个 -p 选项 …  再用 create ，去创建一个数据库，后面指定一下要创建的数据库的名字，ninghao_wpc_dev。回车 …  再输入 root 用户的密码 ...
mysqladmin -u root -p create ninghao_wpc_dev
这里我们可以单独去给这个数据库创建一个用户，先登录到 mysql ，mysql -u root -p  … 回车 …  再输入 root 用户的密码 … 
mysql -u root -p
用 root 身份登录到 mysql 以后，可以使用 grant 命令去分配权限  …  grant all privileges  …  授予所有的权限，on ，后面指定一下数据表 …  输入 ninghao_wpc_dev.* ，表示 ninghao_wpc_dev 这个数据库的所有的数据表 …  再加上一个 to ，指定一下具体的用户， ‘ninghao_wpc_dev’@‘localhost'  … 这样如果这个 ninghao_wpc_dev 用户不存在的话，就会去给我们创建一个 … 注意这行命令的用户名还有主机名的周围都需要用一组引号包围一下。
后面再加上 identified by ，给这个用户设置一个密码 …   最后再加上一个分号 … 然后回车 ..  现在，我们就已经创建好了一个数据库，叫 ninghao_wpc_dev，并且给这个数据库指定了一个专门的用户，叫做 ninghao_wpc_dev，它的密码是 123456 。再输入 exit ，退出 mysql 。
grant all privileges on ninghao_wpc_dev.* to 'ninghao_wpc_dev'@'localhost' identified by '123456';
创建 WordPress 的配置文件用的是 core 命令的 config 这个子命令  …   这个命令有两个必要的选项，--dbname ，数据库的名称，还有 --dbuser，数据库的用户名 … 
再回到命令行工具 … 输入 wp core config  … 先指定一下 --dbname ，也就是 WordPress 要用到的数据库的名字 … 这里就是 ninghao_wpc_dev  … 再设置一下 --dbuser ，可以管理 WordPress 数据库的用户 …  我们刚才给 ninghao_wpc_dev 这个数据库创建了一个用户，也叫做 ninghao_wpc_dev  …   这个用户还有一个密码，所以这里要再加上一个 --dbpass 去设置一下 …    再加上一个 --dbhost ，指定一下数据库的主机 … 这里我们设置成 localhost ，表示本地主机，因为 MySQL 数据库跟 WordPress 是在同一台主机上。
想要设置一下数据表的前缀的话，可以再加上一个 --dbprefix 选项 … 这里我设置成 wpcd_   …   最后我们再设置一下网站的语言 …  用一个 --locale 选项 … 设置成 zh_CN ，表示简体中文。回车 … 
wp core config --dbname=ninghao_wpc_dev --dbuser=ninghao_wpc_dev --dbpass=123456 --dbhost=localhost --dbprefix=wpcd_ --locale=zh_CN
提示成功 …  这个命令会给我们创建一个 wp-config.php 文件 … 输入 ls  …  在这里 …  可以再打开这个文件看一下 …  vim wp-config.php  … 
这个文件里面的一些设置，会根据我们执行命令的时候设置的选项来生成。


02-03-使用 WP-CLI 安装 WordPress：安装

安装 WordPress，要用的是 wp-cli 的 core 命令的 install 这个子命令。这个命令有五个选项，都是必须要设置的选项。 --url ，这个选项对应的值就是网站的地址。--title 选项可以设置一下网站的名字 …  另外还有几个跟管理员相关的选项。--admin-user 是管理员的名字，--admin_password ，是管理员的密码，--admin_email 是管理员的邮件地址。
下面， 我们再回到命令工具，去使用这个命令安装一下 WordPress  …  输入 wp core install ，先设置一下 --url 这个选项 …  在我的电脑上，我给这台主机添加了一条 host 记录，也就是修改电脑上的 hosts 文件，把一个主机名指定到 WordPress 所在的这台主机上。我设置的这个主机名叫做 ninghao-wpc.dev  … 
再添加一个 --title 选项，设置一下网站的名字 …  设置成 WordPress Commerce Dev ..  注意这个标题如果中间有空格的话，需要用一组引号包装一下它。
然后是 --admin_user  … 指定一下网站管理员的用户名 …  这里我设置成 wanghao  ….   再给这个管理员设置一个密码 …  用一个 --admin_password 选项 … 密码设置成 123456  … 最后是管理员的邮件地址 …  用的是 --admin_email 选项 …  设置成 wanghao@ninghao.net …
wp core install --url=http://ninghao-wpc.dev --title='WordPress Commerce Dev' --admin_user=wanghao --admin_password=123456 --admin_email=wanghao@ninghao.net
回车 ...   提示成功，WordPress installed successfully. 
下面，我们可以到浏览器上去试试 ...   打开网站的地址 ... 
会显示一个全新安装的 WordPress 网站。这里我们可以使用在安装的时候设置的管理员登录到 WordPress ...  打开登录的地址 ...  wp-login.php  ...  输入用户名 ...  wanghao ... 再输入密码 ...  然后 登录  ...


03-01-插件管理：安装

安装插件用的命令是 plugin 命令的 install 这个子命令。下面，我们去试一下。打开命令行工具，然后先进入到 WordPress 所在的目录里面，确切的说应该是进入到 wp-config.php 这个配置文件所在的目录里面，因为你可能会把这个 wp-config.php 放到其它的地方。 wp-cli 需要用到 wp-config.php 这个文件里面的一些东西。
下面，我们用 plugin 的 install 去安装一个叫 theme-check 的插件  ..  输入 wp plugin install  ... 后面加上插件的别名..   这个别名就是插件在 WordPress 插件库里的页面地址上的名字 ...  有些 WordPress 插件可能不在插件库里，比如可能会放到 github 或者其它的远程地址 ... 在安装插件的时候，我们也可以使用插件下载地址 ... wp-cli 会把它下载下来，然后解压，再放到 WordPress 的插件目录里面。
这里我要安装的插件的名字是 theme-check  ... 
wp plugin install theme-check 
提示成功以后，我们可以再去查看一下这个插件的状态  ... 用的是 plugin 的 status 这个子命令  ...  wp plugin status ...  后面加上插件的名字  ...  theme-check 
wp plugin status theme-check
这里会显示出这个插件的名字，状态，版本，插件的作者，还有描述 ...  注意这里的 Status ，后面是 Inactive ，表示这个插件现在还是禁用的状态。在后面的视频里我们再去看一下怎么样去切换插件的状态。
下面，再去下载一下插件  ...  这里我要下载一个可以用 360 镜像替换 Google 的插件，这个插件可以解决在国内打开 WordPress 速度慢的问题，不过我忘了这个插件的具体的名字 ... 只记得插件的名字里包含一个 useso ...  这样我们可以先去搜索一下 ..  用的是 plugin 的 search 命令 ...  wp plugin search  ... 后面加上要搜索的关键词 ... useso 
wp plugin search useso 
这里会显示一个搜索结果 ..  列表的每个项目包含了插件的名字，别名，还有评分 ...   这里我要找的是这个 Useso take over Google  ...  再去安装一下它 ... 
wp plugin install ... 再加上这个插件的别名 ... useso-take-over-google  .. 
wp plugin install useso-take-over-google
完成以后，查看一下系统里面的插件  ... 可以使用 plugin list 这个命令 ... 
wp plugin list
在这里，你可以看到，刚才我们下载安装的两个插件，theme-check  ...  还有 useso-take-over-google  ...


03-02-插件管理：启用，禁用

使用 plugin 的 install 安装了插件以后，默认这些插件是禁用的状态。我们需要再用 plugin 的 activate 去启用指定的插件。比如我们先去启用一下 theme-check 这个插件  ... 输入 wp plugin activate  ... 后面加上要启用的插件的名字 ...  theme-check  ... 回车 .. 执行一下这行命令 ..
wp plugin activate theme-check 
再查看一下插件的列表  ...  wp plugin list 
wp plugin list 
你会发现，theme-check 这个插件现在的状态是 active ，表示是启用的状态 ...   
禁用插件，用的是 deactivate ...   输入 wp plugin deactivate  ...  再加上要禁用的插件的名字 ...  theme-check  ....  
wp plugin deactivate theme-check
再看一下这个插件的状态 ...  
wp plugin status theme-check  ...  
它的状态，现在又变成了 inactive  ...  表示现在是被禁用的状态。获得插件的相关信息也可以使用 plugin 的 get 这个子命令 ...    
wp plugin get theme-check


03-03-插件管理：卸载

有些插件在启用以后，会在 WordPress 的数据库里创建一些自己的数据表。想要完全删除掉插件，需要使用 uninstall 去卸载一下。我们可以先查看一下当前的 WordPress 数据库里的数据表 ...  输入 wp db tables  ... 这里列出的就是数据库里的所有的数据表 ... 
然后我们再去安装一个插件  ...  wp plugin install ... 安装的插件是  woocommerce ，一个电子商务功能的插件 ...  后面我们再加上一个  --activate 选项 ... 它可以直接启用这个插件 ... 
wp plugin install woocommerce --activate 
完成以后，再查看一下网站使用的数据库里的数据表 ...  
wp db tables
你会发现，相当之前我们看到的列表，这里会多出两个数据表 ... 就是这两个带 woocommerce 这个词儿的数据表 ...   这是我们在启用 woocommerce 这个插件以后，它创建的两个数据表 ... 
想要卸载这个插件，可以先禁用这个插件，然后再去执行卸载的命令。禁用插件可以这样  ...   wp plugin deactivate woocommerce  ... 
要彻底删除掉它，需要使用 uninstall  这个命令 ...  wp plugin uninstall 后面加上要卸载掉的插件的名字 ... woocommerce   ... 这个命令会删除掉插件相关的数据，包括插件文件。如果你想保留插件的文件的话，可以加上一个 --no-delete 选项 ...  这样卸载命令只会删除掉插件相关的数据  ... 
wp plugin uninstall woocommerce
回车，执行一下这行命令 ... 
完成以后，再查看一下数据表 ...   wp db tables ... 你会发现，之前那两个 woocommerce 的数据表已经被删除掉了 ... 
再查看一下插件列表  ...  wp plugin list  ...     在这个列表里，也找不到 woocommerce 这个插件了。


03-04-插件管理：升级

升级插件，用的是 plugin 命令的 update 这个子命令。我们可以先故意安装一个旧版的插件，然后再用这个命令去升级一下 ...  先去找一个旧版的插件 ...这里你看到的是 pods 插件的页面，它是一个功能强大的插件，可以自定义内容类型，字段，分类法等等 ...    在插件的页面， 先点开 Developers  ... 
然后在 Other Versions 这里，找到一个这前发布的版本 ...  这个 2.3.18  ....  右键点击这个链接 ... 然后选择 复制链接地址  ..  回到命令行工具 ...  再输入 wp plugin install  ... 然后再把刚才复制的插件的下载地址粘贴过来 ...  后面再加上一个 --activate 选项 ...
wp plugin install https://downloads.wordpress.org/plugin/pods.2.3.18.zip --activate
完成以后，可以再打开 WordPress 的后台去看一下 ...  找到 仪表盘 ，更新 ...   在这里，你会看到，有一个需要更新的插件，就是刚才我们安装的 pods 这个插件。再回到命令行工具 ... 
输入 wp plugin list  ...  在这里，也会显示， pods 这个插件有可用的更新，因为跟它对应的 update 这栏里面，显示的是 available ，表示有可用的更新。
下面我们可以去升级一下它 ...  输入 wp plugin update  ... 后面可以加上要升级的插件的名字 ... 如果你想升级所有的可以升级的插件，可以在这里加上一个 --all 选项。这里我们只要升级  pods 插件  ...  所以，可以指定一下这个插件的名字 ...  输入 pods  ... 
wp plugin update pods  ...
成功以后，再查看一下插件列表  ...  wp plugin list  ...  现在所有的插件都是最新的版本了 ...  
再回到浏览器 ...   刷新一下 ...  在这个更新的页面上，也不会再显示要更新的插件了。


04-01-用户管理：创建用户

下面， 我们一起再去了解一些跟用户相关的命令。先去使用命令创建一个用户 ...  用的是 user 命令的 create 这个子命令 ... 输入 wp user create  ...  这个命令有一些选项，先是要创建的这个用户的名字，也就是用户登录用的那个用户名 ...  输入 xiaoxue  ...   接着是用户的邮件地址 ...  xiaoxue@ninghao.net ...  用户名还有邮件地址是必要的选项，另外还有一些可选的选项 ... 
比如我们可以为用户指定一个角色，可以使用 --role 这个选项 ...  不指定的话会使用默认的角色，也就是订阅者 ... 在后面我们会再去详细介绍一下用户的角色相关的命令 ... 
这里先再加上一个 --user_pass  ...  指定一下 xiaoxue 这个用户登录时要用到的密码 ...  123456  ....  另外，可以再加上一个 --display_name 选项，这是用户的显示出来的名字，比如在评论上，文章上显示的用户名，如果不单独指定这个名字的话，默认会直接使用用户登录用的名字 ... 这里我设置成中文 ... 小雪 ... 
wp user create xiaoxue xiaoxue@ninghao.net --user_pass=123456 --display_name=小雪
回车 ... 执行一下这条命令 ..  提示创建用户成功 ... 
下面，我们再查看一下用户的列表  ...  可以使用 user 命令的 list 子命令  ...  wp user list  ...  回车 ...   在这里，你会看到，刚才我创建的 xiaoxue 这个用户。
想查看这个用户的更详细的信息，可以这样 ...  wp user get  ... 后面加上要查看的用户的 id 号或者用户的名字 ...   这里输入 xiaoxue  ... 然后回车 ...
wp user get xiaoxue 
在这里出现的就是 xiaoxue 这个用户相关的信息。


04-02-用户管理：更改用户相关信息

我们可以使用命令去修改现有的用户的相关信息，比如他的显示的名字，或者密码等等。下面我们再去试一下这个更新用户的命令。我们可以再去创建一个用户。输入 wp user create  ... 创建一个叫 zhangsan 的用户 ...  再输入一下他的邮件地址 zhangsan@ninghao.net ... 回车去执行一下 ...
wp user create zhangsan zhangsan@ninghao.net
在创建用户的时候，我们并没有给这个用户去设置密码，这个创建用户的命令会给我们自动生成一个密码 ...  这个密码就是 zhangsan 这个用户登录用的密码 ...  下面，我们去修改一下用户的密码  ...  wp user update ....  后面指定一下要修改的用户 ...  这里可以是用户的登录名，也可以是用户的 id 号 ...  输入 zhangsan  ... 然后再加上要修改和选项 ..
可以先加上一个 --display_name ... 显示名 ...  让它等于 张三 ...  再加上一个 --user_pass  ... 去重新设置一下 zhangsan 这个用户登录用的密码 ...  设置成 123456 .. 再回车，执行一下 ... 
wp user update zhangsan --display_name=张三 --user_pass=123456
现在，我们就修改了 zhangsan 这个用户的显示名 .. 还有他的登录密码。


04-03-用户管理：用户的权限

用户的权限在 WordPress 上叫做 capability ，也就是用户能在网站上做的事情，比如编辑内容，发布内容，管理内容等等，这些都是用户的权限。一般，我们会把权限添加到不同的用户角色上面，然后再把角色分配给指定的用户。这样拥有这个角色的用户，就会拥有相应的权限了。我们也可以把权限单独分配给指定的用户。
列出用户所拥有的权限，可以使用 user 命令的 list-caps 这个子命令 ...  输入 wp user list-caps  ... 后面加上指定的用户 ...   xiaoxue  ... 
wp user list-caps xiaoxue 
这里你会看到三个东西，read，level_0，还有一个 subscriber ，这里面的 level 开头的这个东西是 WordPress 老版本里面用到的权限管理，level_0 就表示的就是 subcriber 这个角色，也就是订阅者。
read 就是 xiaoxue 这个用户拥有的真正的权限，read 表示的就是读取，也就是 xiaoxue 现在只有看内容的权限。下面先用 xiaoxue 这个用户登录一下 ...  打开登录的地址 .... 输入用户名 ...  xiaoxue ...  再输入密码 ...  然后点击登录  ... 
登录以后，你会发现，在用户的后台，除了可以修改个人资料以外 ...  她还不能做其它的事情  ..  再回到命令行 ...   去给 xiaoxue 单独分配一些权限  ...   使用命令可以列出某个用户角色所拥有的所有权限 ..   这里我们先去列出所有的用户角色 ...   输入 wp role list  ... 
这里就是所有的角色  ... 下面再去看一下 author ，也就是作者这个角色所拥有的权限 ...  这里要用的是 cap 命令的 list 这个子命令 ..  wp cap list  ... 后面加上用户角色 ...  author
wp cap list author
列出的就是 author 这个角色拥有的权限 ...  每个权限都表示用户可以在网站上做的一个事情，这些权限都是用英文表示的，一般权限的名字就能表示出它可以做什么 ...  upload_files ，上传文件的权限，edit_posts ，编辑文章的权限，edit_publisted_posts ，编辑已经发布的文章，publish_posts ，发布文章的权限。
这里我们给 xiaoxue 先分配一下 edit_posts  ... 可以编辑文章的权限  ...  wp user add-cap ... 这个命令可以给指定的用户分配指定的权限 ...  要分配权限的用户是 xiaoxue  ...  再输入一个空格 ... 然后再指定一下权限 ...  edit_posts  ... 
wp user add-cap xiaoxue edit_posts
回车 ...   再查看一下 xiaoxue 的权限 ...   
wp user list-caps xiaoxue  
这里你会看到 edit_posts 这个权限会出现在这个列表里面。再回到浏览器 ...  刷新一下 ...  你会发现用 xiaoxue 登录的后台，会有一些变化  ...  边栏的菜单上，会多出来一个文章，还有评论 ...   打开 文章 ... 写文章 .. 
打开撰写文章的表单 ...  这是因为 xiaoxue 这个用户，现在拥有了 edit_posts 这个权限 ..


04-04-用户管理：用户的权限 #2

注意现在这个撰写文章的页面，在发布这个小工具的上面，这个按钮是 提请审批 ... 也就是，用户只能去创建内容，然后点击这个 提请审批 的按钮，这个文章不能直接发布，需要有发布权限的用户，审核一下，通过以后，才能正式发布用户创建的内容 ... 
下面我们再去给 xiaoxue 分配一下可以发布文章的权限 ..   输入 wp user add-cap xiaoxue  ... 给 xiaoxue 这个用户添加权限 ... 要添加的是 publish_posts ... 这个权限...
wp user add-cap xiaoxue publish_posts
回车 ...  再回到用小雪登录的后台 ...  刷新 ...  你会看到，在撰写文章的个页面上，这个 提请审批 这个按钮，会变成一个 发布 按钮 ...   说明 xiaoxue 现在可以直接发布文章了 ... 因为刚才我们给她分配了一个 publish_posts 的权限。
移除权限
user add-cap 可以为用户添加权限，user remove-cap 可以把用户的权限去掉 ...  再回到命令行。先查看一下 xiaoxue  这个用户的权限列表 ...  wp user list-caps xiaoxue
然后再去掉分配给 xiaoxue 的这两个权限 ..  wp user remove-cap  xiaoxue  ... 再加上要去掉的权限的列表 ...  先去掉 edit_posts  ...  然后再去掉 publish_posts ... 
再查看一下用户权限的列表 ..  你会发现，之前添加给 xiaoxue 的 edit_posts 还有 publish_posts 这两个权限就已经被移除掉了。
回到浏览器 ...  刷新一下 ...  因为刚才是在发布文章的页面上，现在 xiaoxue 已经没有这个权限了，所以刷新以后，会提示说用户没有权限查看这个页面 ...  再回到后台的首页 ...   你会发现后台又恢复到了最开始的样子 ...


05-01-角色管理

查看在 WordPress 里面定义的所有的用户角色可以使用 role 命令的 list 子命令 ...  wp role list ...  WordPress 默认给我们定义了 5 个角色，administrator，管理员，editor，编辑，author ，作者，contributor，贡献者，subscriber，订阅者。
这些角色里面，都有了一些权限。把这个角色添加给用户，用户就会拥有所有给角色的权限了。给用户添加角色，用的是 user 的 add-role 这个命令。我们可以给 xiaoxue 添加一个角色 ...  wp user add-role ...   然后是添加角色的用户 ...  xiaoxue  ... 接着是要添加给用户的角色 ...  author ... 回车 ... 执行一下这行命令 ..
wp user add-role xiaoxue author 
成功以后，我们可以再查看一下 xiaoxue 的相关信息 ...  wp user get  xiaoxue ...    在 roles 这里，会有两个角色，subscriber，还有刚才添加的 author 。再查看一下 xiaoxue 拥有的权限。
wp user list-caps xiaoxue ... 
在这里出现的一些权限，就是 author 这个角色所拥有的权限。
再打开浏览器 ... 刷新一下用 xiaoxue 这个用户登录的后台 ...    ...   这里你会看到在管理后台的边栏上，会有一些东西，比如文章，多媒体 ... 评论 ...  这是因为我们之前给 xiaoxue 这个用户分配了一个 author 角色，所以才会出现这些东西。
再回到命令行 ...  下面，我们可以移除掉 xiaoxue 用户的 author 这个角色  ...   输入 wp user ... 移动用户的角色用的是 remove-role  ...   再加上用户的名字 ...   xiaoxue  ... 然后是要移除掉的角色 ...  author  ...  回车 ... 执行一下。
wp user remove-role xiaoxue author
回到浏览器 ... 刷新一下 ...  现在使用 xiaoxue 这个用户登录的后台会出现一些变化。现在她不能再去编辑文章和评论内容了。因为我们去掉了 xiaoxue 的 author 角色。


05-02-角色管理：创建角色

创建一个新的用户角色可以使用 role 命令的 create 子命令 ... 下面，我们去创建一个角色，然后给这个角色分配几个权限，让拥有这个角色的用户可以去管理网站上的用户。先输入 wp role create  ...  后面是要创建的角色的名字，这个名字是 WordPress 内部使用的名字，所以需要使用小写的字母，下划线去命名它  ...  这里我们可以让它 user_manager ，用户管理员 ...  
输入一个空格，然后是这个角色的显示名，也就是在图形界面上显示的这个角色的名字，这里我们可以使用英文也可以使用中文，怎么样都行。输入一组引号，然后是 User Manager ...  回车 ... 去执行一下 ... 
wp role create user_manager "User Manager"
提示成功以后，我们可以查看一下系统里面的所有的用户角色  ...  
wp role list 
你会看到刚才我们创建的 User Manager 这个用户角色 ...  注意这里的 Role 这列里面的名字，是这个角色在 WordPress 内部系统里使用的名字，也就是，你在插件，主题，或者其它地方想要调用这个角色的话，需要使用这一列里面的角色的名称。
再去查看一下这个角色拥有的权限   .... 可以使用 cap 命令的 list 子命令 ..  wp cap list  后面加上角色的名字 ...  user_manager ...  回车 ...  这里没有返回任何东西 .. 说明这个角色还没有权限 ...   在下面的视频里我们再看一下怎么样为角色添加权限。
wp cap list user_manager


05-03-角色管理：为角色添加权限

为角色添加权限之前我们需要先知道要添加的权限是什么，wp-cli 没有命令可以列出系统里的所有权限，不过你可以列出指定的角色里面的权限。或者，我们也可以列出在安装系统的时候创建的那个管理员的用户的权限。也就是 id 号是 1 的这个用户的权限。
输入 wp user list-caps 1
下面，我们可以把这个权限列表里的所有的关于 users 的权限添加到我们之前创建的 user_manager 这个角色里面。得到所有 users 相关的权限可以这样 ... 在这行命令的后面，加上一个竖线 ... 然后 grep users  ...   列出包含 users 的权限 ... 
wp user list-caps 1 | grep users
看这些权限的名字，你大概可以猜出这些权限的用途。edit_users ，编辑用户，delete_users ，删除用户，create_users，创建用户 ...    给指定的角色添加权限可以这样，输入 wp cap add ... 然后是要添加权限的角色的名字 ...  user_manager  ....  再输入一个空格，然后是要添加给 user_manager 这个角色的权限 ...  比如 edit_users  ...   回车以后就会把 edit_users 这个权限添加给 user_manager 这个角色了 ... 
wp cap add user_manager edit_users 
这里我再介绍一个可以批量添加权限的方法 ...   前面我们已经列出了 users 相关的权限  ...  在这行命令的后面。再加上一个竖线，然后用一个 xargs  ...  后面再指定一下为角色添加权限的命令 ... 也就是 wp cap add user_manager  ...  
这样回车以后，会把所有包含 users 的这些权限添加给 user_namager 这个角色  ...  这个 xargs 在这里的作用就是，把前面得到的列表里的每个项目，都作为后面这行命令的一个参数 ...   有点像是利用列表里的项目循环的去执行这个添加权限的命令 ...  回车 ...
wp user list-caps wanghao | grep users | xargs wp cap add 'user_manager'
完成以后，再查看一下 user_manager 这个角色的权限  ...  wp cap list user_manager  ...  回车 ...  你会看到一些 users 相关的权限已经包含在了这个 user_manager 角色里面了。
wp cap list user_manager
下面，我们可以把这个角色分配给 xiaoxue 这个用户。 wp user add-role xiaoxue user_manager ...    成功以后，再查看一下 xiaoxue 这个用户 ...  wp user get xiaoxue  ...  回车 ...  你会看到， roles 这行里面，已经有了刚才添加给 xiaoxue 的 user_manager 这个角色 。
再回到浏览器  ... .  用 xiaoxue 这个用户登录一下 ...   刷新  ...   你会看到，在管理后台上， 会出现一个 用户 菜单  ...  这是因为我们把用户管理相关的权限分配给了 user_manager 这个角色，又把这个角色交给了 xiaoxue 这个用户，所以，在这里， xiaoxue 就可以去管理网站上面的所有的用户了。


06-01-数据库

下面，我们再学几个跟数据库相关的命令。输入 wp db --help  ...  可以查看一下 db 相关的子命令。先试一下 tables 这个命令。 wp db tables ...   回车 ...  在这里显示的就是 WordPress 使用的数据库的所有的数据表。
wp db tables
我们可以直接执行 SQL ，去操作数据库。输入 wp db query  ...  在后面可以直接输入 SQL 的语句 ...  用一组引号 ...    比如我们要列出 users 这个表里的记录 ... 可以这样... select * from wpcd_users  ...   回车 ... 
会显示出所有的用户记录。 在 WordPress 的后台，不让我们去修改用户的登录名，这里，可以直接使用 SQL 的语句去更改 ....   wp db query ... 使用 update 这个 SQL 语句 ...  后面加上要更改内容的表的名字 ...  wpcd_users  ...   再加上一个 set ，  用户登录名对应的字段是 user_login  ...  让它的值等于 xiaolu  ...   后面再加上一个条件  ... where ID=x  ...  这行命令的意思就是，去把 ID 号是 x 的这个用户的登录名，改成 xiaolu  ... 
wp db query "update wpcd_users set user_login='xiaolu' where ID=x"
回车 ...   再查看一下用户的列表 ...  这里我们再用一下 user 命令的 list 这个子命令 ...  
wp user list 
你会看到，ID 号是 x 的这个用户的登录名，就变成了 xiaolu 了。
想要使用 MySQL 控制台的话，可以直接输入 wp db cli  ...  回车 ...  这样会用 wp-config.php 里面的跟数据库相关的配置，连接到 MySQL  ...  输入 show databases;   ..  你会看到我们只能管理 ninghao_wpc_dev 这个数据库，因为当前我们连接到 MySQL 用到的用户，只能管理这个数据库。
退出登录，可以使用 exit  ...  关于 MySQL 的操作，你可以参考宁皓网的 MySQL 基础教程。


06-02-数据库：导出

下面，我们再学几个跟数据库相关的命令  ...   使用 db 的 export ，可以把 WordPress 使用的数据库导出成一个 .sql 的文件 ...   这个文件相当于是对 WordPress 数据库的一个备份 ...   如果数据表损坏，或者丢失的话，我们可以再使用这个 sql 文件恢复一下 ... 
先看一下怎么样导出数据库 .. 输入 wp db export  ... 在这个命令的后面，可以再加上导出以后，这个文件的位置还有名字 .. 如果不指定的话，默认会使用当前的数据库的名字去命名这个 sql 文件。 另外，你还可以加上一些选项，比如 --add-drop-table ，这样导出的 sql 文件里面会包含删除数据表的 SQL 语句，也就是在导入这个文件到数据库里的时候，如果数据库里已经包含了要导入的数据表，会先删除掉这个数据库，然后再去导入。这些选项，你可以参考 MySQl 的 mysqldump 这个小工具的选项。
这里还可以指定一下要导出的具体的数据表。先加上一个 --tables 选项，然后再指定要导出的数据表的名字的列表。
我们先不加这些选项，直接去执行一下这行命令。回车 ... 
wp db export 
成功以后，会提示，已经把数据库导出成了一个以数据库的名字命名的 .sql 文件  ...  输入 ls ... 查看一下  ...  在我这里就是这个 ninghao_wpc_dev.sql  ... 因为我给 WordPress 创建的数据库的名字就是 ninghao_wpc_dev  ... 
在导出的时候，你可以指定一下这个文件的存储的位置 ...  因为如果直接把这个文件放到谁都可以访问到的目录下面，会非常的不安全，用户可以通过浏览器下载到这个文件 ...  
在下面，我们再看一下怎么样把这个 .sql 文件里面的数据恢复到数据库里面。


06-03-数据库：重置，删除，创建数据库

我们可以先去删除掉数据库里的所有的数据表 ...  这里要用的是 db 命令的 reset 子命令 ... 
wp db reset  
回车 .. 提示要否要重置数据库 ... 输入 y ..  然后再按下回车 ...   提示重置数据库成功 .. 
回到浏览器 ...  打开网站 ... 刷新一下 ...  这里会提示要安装 WordPress  ...  因为我们刚才把数据表都删除掉了 ...  现在 WordPress 会认为我们还没有安装过 WordPress 。
再回到命令行 ....  这次我们再试一下 db 的 drop 这个命令，它可以把在 wp-config.php 里面指定的数据库删除掉 ...  输入 wp db drop  ... 回车 ...   提示是否要删除掉数据库 ...  输入 y  .... 回车 ... 
wp db drop
我们再到浏览器上看一下 ...   刷新  ... 这回又会显示无法选择数据库 ... 这是因为我们把 WordPress 要用到的数据库给删除掉了  ...  回到命令行 ...   再去创建一个在 wp-config.php 这个文件里面指定的数据库 ...   输入 wp db create ...   回车 ... 
wp db create 
提示创建数据库成功 ...


06-04-数据库：导入

把一个 .sql 文件导入到 WordPress 使用的数据库里面，可以使用 db 命令的 import 子命令 ...    输入 wp db import  ...  这里如果直接回车的话，命令会试着去在当前的目录下面，去找一下跟在 wp-config.php 这个文件里面指定的数据库名字的 .sql 文件。
也就是，如果你的 WordPress 数据库叫 WordPress ，那导入的时候，就会试着导入当前目录下面的 wordpress.sql 这个文件里的东西 ...  或者，我们也可以要手工去指定一下这个文件的具体的位置  ... 
wp db import 
先执行一下这行命令 ... 回车 ...    提示导入成功 ...    再回到浏览器 ... 刷新一下 ...  你会看到一个跟之前一样的 WordPress 网站。 回到命令行 ... 
前面我们提到过了，这个 .sql 不能放在任何人都可以访问到的 Web 目录里面。这样所有人都可以通过浏览器下载到这个 .sql 文件，去查看这个文件里面的内容。
这里，我们可以把这个 sql 文件移动到 Web 目录之外的目录里面 ...  或者如果不再需要它的话，可以直接删掉它。输入 rm -rf  ... 加上要删除掉的文件的名字 ...  ninghao_wpc_dev.sql  ...  回车 ... 
再查看一下 ...   输入 ls   ...   现在，已经看不到 ninghao_wpc_dev.sql 这个文件了。


07-01-迁移

网站的迁移就是把网站从一个地方挪到另一个地方。你可能想把在本地开发好的网站，迁移到网站正式运行的服务器上。这个流程应该会经常用到。在以后，我们可能会推出一个专门针对 WordPress 工作流程的课程，比如加入版本控制，更好的迁移数据库方法等等。在接下来的视频里我们介绍一下简单的网站的迁移。
把一个网站从一个地方迁移到另一个地方大约需要三步，网站文件的迁移，网站数据库的迁移，另外需要一些额外的修改，比如更改网站的数据库的相关配置，替换掉数据库里插入到文章里的媒体文件的链接等等。
在后面的视频，我会在用 vagrant 在本地开发环境上去演示这个网站的迁移 ...  你可以参考宁皓网的 vagrant 开发环境 这个课程。这里我们需要两个主机，一台作为本地开发的主机，另外一台模拟一下要把网站迁移到的那个服务器。
关于怎么样配置多台主机，你可以参考 vagrant 开发环境 这个课程的第五章 ...   另外， 我还修改了我的电脑的 hosts 文件，分别让两个虚拟的主机名，指向这两台主机  ...  ninghao-wpc.dev 指向的是用来本地开发的主机 ..   ninghao-wpc.com 指向的是模拟网站服务器的那台主机。
在迁移的时候我们会用到一些 wp-cli 的命令，另外还会结合一些其它的系统相关的命令。


07-02-迁移：打包网站文件

进入到项目的目录里面以后，先去启动一下这两台主机 ... 输入 vagrant up  ...  如果你还没听过什么是 vagrant ，可以参考宁皓网的 vagrant 开发环境这个课程，课程里面介绍了怎么样去配置多台主机 ... 
启动以后，先 ssh 到开发用的主机上 ...  vagrant ssh development  ...   这里我已经提前安装好了一个 WordPress  ...   打开浏览器 ... 输入指向这个主机的主机名 ...  ninghao-wpc.dev  ... 
这里我只是添加了一篇文章 ... 在这个文章里，上传了一张图片 ...  假设我们已经开发好了这个网站，然后打算把网站迁移到服务器上 ...  回到命令行工具 .... 
进入到网站所在的目录的上一级目录里面。我这里就是 /vagrant 这个目录  ...  输入 ls .. 查看一下这个目录里的东西  ... 这个 www 就是我的网站所有的文件所在的位置 ... 
下面，我们再去给网站的文件打个包 ...   这里可以使用 tar 这个命令，tar 表示的是 tape archive ，这是一种归档文件格式 ... 使用 tar 这个命令，我们可以去把一些文件或者目录打成一个包，你也可以在打包的时候，去压缩一下包里面的所有的文件，这样包文件的总体积会小一些。
输入一个 tar ... 这个小工具有很多选项，这些选项可以控制你到底想怎么样去创建或者处理指定的包文件 ...   这里先用一个 c ...  它应该是 create 的简写形式 ...  表示我们要去创建一个包文件 ...  再加上一个 f ...  f 就是 file ，表示后面的参数就是这个归档文件的文件名 ...   
比如我们要把 www 这个目录里面的所有的东西打成一个包，叫做 archive.tar  ... 这里就先输入一个 archive.tar  .... 再输入一个空格 ... 然后是要添加到这个包文件里面的东西  ...  就是 www 这个目录 ..
tar cf archive.tar www
回车 ... 执行一下 ...  执行这个打包动作的时间取决于你要添加到包文件里面的东西有多少 ..   通常会很快 ...    完成以后 .... 输入一个 ls ，查看一下当前目录下面的东西 ...  在这里你会发现一个 archive.tar ...
在打包的时候，我们可以再添加一个 z 选项，表示 gzip ，这样会去压缩一下打包之后的文件  ...   我们可以再试一下 tar 这个命令 ..  tar czf ... 后面是包文件的名字 ...   这里我们用一个 archive.tar.gz ... 在文件名里加上一个 .gz ，表示这是 gzip ，压缩之后的文件 ... 
然后是要添加到这个包文件里的东西 ...  输入 www  ...  注意压缩打包以后的文件可以需要更多的时间  ... 
tar czf archive.tar.gz www
先回车去执行一下 ...   完成以后，查看一下文件 ...   ls  ...  再加上一个 -lah  ...   这里，你会发现  ... 普通的没有压缩的包的体积会大一些 ... 压缩以后，这个文件的体积更小 ... 方便在网上传输  ...


07-03-迁移：转移压缩包文件

现在我们就把网站需要的所有的文件打成了一个包，下面要做的就是把这个包文件上传到服务器上，然后在服务器上再解开这个包 ...   传递文件可以用 scp  ... scp 表示的是 secure copy，意思就是使用一种安全的，加密的方式去复制文件 ...   
输入 scp  ... 先是要复制的文件 ...  这里就是 archive.tar.gz 这个文件 ...  然后是要把这个文件复制到的那个位置  ...  我们需要把它复制到服务器上 ...  可以这样 vagrant@192.168.33.66 ... 先是 ssh 登录用的用户名 ...  这个用户应该就是能用 ssh 登录到你服务器的那个用户 ...   这里我用的是 vagrant 这个用户 ...   然后在 @ 后面指定一下服务器的主机名或者 ip 地址 ... 
再加上一个冒号 ...  接着再指定一下这个文件要放到服务器的哪个地方  ... 
scp archive.tar.gz vagrant@192.168.33.66:/vagrant/
这行命令的意思就是把在本地主机上的当前目录下面的 archive.tar.gz 这个文件，使用安全的方式复制到 ip 地址是 192.168.33.66 这台服务器上，位置是在 /vagrant 这个目录里面。
回车 ... 执行一下  ...  因为我是在本机虚拟出来的这个场景，所以，速度会非常快 ... 
新建一个命令行的标签  ...  然后登录到服务器上 ...   vagrant ssh production  ...     回车 ...     然后进入到服务器根目录下面的 vagrant 这个目录里面。
再查看一下这个目录里的东西 ... 输入 ls 回车 ... 
在这里，你会看到一个 archive.tar.gz 这个文件 ...  这就是刚才我们从本地主机上复制过来的网站文件的压缩包 ...   下面，我们可以解压一下它  ...  还是要用到 tar 命令  ...  输入 tar  ... 接着要用到几个选项 ... 输入一个 x ，表示要去解压 ...  它应该表示的就是 extract ...   再加上一个 z ，因为这个包文件是被压缩过的 ...  最后可以是一个 f 选项，再输入一个空格，然后指定一下这个包文件的名字 ...  archive.tar.gz ...
tar xzf archive.tar.gz
回车 ... 执行一下  ...   完成以后，再查看一下当前目录里的东西 ... 输入 ls  ... 你会看到多了一个 www 目录  ... 这个就是解压以后的文件所在的目录 ...  再查看一下这个目录里的东西 ...   ls www  ...
这里出现的就是网站需要的所有的文件  ...


07-04-迁移：导出与导入数据库

数据库的导出与导入之前我们已经讲过了，用的就是 db 命令的 export 还有 import 命令。我们先到本地主机上，把开发好的网站的数据库导出来  ...   在命令行工具里面，进入到项目所在的目录 ... 也就是 wp-config.php 这个文件所在的那个目录里面。然后输入 wp db export  ...   这里可以指定一下导出来的这个 .sql 文件的位置 ...   放到上一级目前里面 ...  命名成 ninghao_wpc_dev.sql  ...  
wp db export ../ninghao_wpc_dev.sql     
回车 ... 执行一下 ...  成功以后 .. . 我们再回到上一级目前里面 ...   cd ../
然后输入 ls  ... 查看一下这个目录里的东西 ... 你会看到这个导出来的 .sql 文件  ...   下面，我们再把这个数据库文件传到服务器上去  ...  可以使用之前介绍过的 scp 命令 ...  不过在传输之前，可以先压缩一下这个文件 ... 这样它的体积会更小一些 ...   输入 tar zcf database.tar.gz ninghao_wpc_dev.sql  ...   回车 ... 
再去把这个压缩以后的文件传到服务器上  ...  输入 scp  ... 要传的文件是 database.tar.gz  ...   再输入可以 ssh 到服务器上的用户 ... vagrant ... @... 后面加上服务器的 ip 地址 ...  192.168.33.66  ...  冒号 ..  指定一下存储这个文件的位置  ..  /vagrant/ ...  回车 ... 输入登录到服务器上的 vagrant 这个用户的密码 ... 这里也是 vagrant  ... 
scp database.tar.gz vagrant@192.168.33.66:/vagrant/
完成以后，再回到 ssh 到服务器的这个终端窗口 ... 进入到 /vagrant 以后 ...  输入 ls ...   你会看到这个传过来的文件 ... database.tar.gz  ...   再解压一下这个文件  ... 
tar xzf database.tar.gz 
再输入 ls 查看一下 ...  这里的这个 ninghao_wpc_dev.sql 就是解压以后的文件 .... 
下面，我们需要在服务器上创建一个数据库，再给这个数据库分配一个专门的用户 ...   先连接到 mysql  ...   mysql -u root -p  ... 用 root 身份登录一下 ...  回车  ... 输入 root 用户的密码 ...  
先去创建一个数据库 ..   create database ninghao_wpc;   创建一个叫 ninghao_wpc 的数据库 ...   完成以后，再去给这个数据库分配一个用户  ..    grant all privileges on ninghao_wpc.* to 'ninghao_wpc'@'localhost' identified by '123456';
完成以后，再退出一下 ...   输入 exit  ... 回车 ... 
进入到 www 这个目录  ...   我们可以直接去修改一下 wp.-onfig.php 这个配置文件里面的跟数据库相关的信息 ...  因为在服务器上，使用的数据库，管理数据库的用户还有密码都跟我们在本地上的不一样了 ... 
可以使用 vim 去编辑一下这个配置文件 ...  vim wp-config.php ... 按一下小 i 进入编辑模式 ...    先修改一下这个 DB_NAME ，也就是数据库的名称  ...   把 ninghao_wpc_dev 改成 ninghao_wpc  ...  
再改一下  DB_USER ... 数据库的用户名 ...  同样是把 ninghao_wpc_dev 改成 ninghao_wpc  ...   其它的东西都是一样的 ...    按一下 esc  ... 退出编辑模式 ... 再输入 :wq  ... 保存并退出 ... 
下面，我们再去导入数据到数据库里面  ....   输入 wp db import ，后面再指定一下数据文件的位置 ...   在上一级目录里面，叫 ninghao_wpc_dev.sql  ..
wp db import ../ninghao_wpc_dev.sql 
回车 ... 执行一下 .... 提示成功 ...    在下面的视频里，我们再看一下迁移网站的最后一步 ...  查找并替换数据库里的内容 ...


07-05-迁移：查找与替换数据库内容

到目前为止，我们已经完成了迁移的大部分工作，不过现在网站在服务器上还不能真正去运行，还有点问题 ...   这里先打开指向服务器的主机名看一下 ...  ninghao-wpc.com ...   因为我是在本地虚拟的一个开发环境，如果你真正把网站迁移到服务器上的话，打开的页面可能是没有样式的，并且插入到文章里的图片也不能正常显示。
这里能正常显示是因为在我虚拟的环境里面，服务器这台主机也可以访问到本地主机上的资源 ...   我们可以先关掉本地主机 ...  回到命令行 ...  先退出一下 .. .输入 exit  ... 然后输入 vagrant halt development  ...   
再回到浏览器 ... 刷新 ...  你会发现，现在显示就不正常了 ... 
我们再查看一下这个页面的源代码  ... 你会发现，链接样式表，脚本文件的地址里面，还包含着在本地开发的时候的主机名 .. 就是这个 ninghao-wpc.dev  ... 在服务器上正式运行的时候，这个主机名应该是 ninghao-wpc.com  ... 
所以，我们得想办法去修改这些东西 ...    使用 wp-cli 的 search-replace 可以很容易做到。 回到 ssh 到服务器主机的终端窗口 ...  进入到网站目录以后 ..  输入 wp search-replace  ... 然后先指定一下要在数据库里查找的东西 ... 这里就是 http://ninghao-wpc.dev  ... 输入一个空格 ... 后面加上要替换成的东西 ...  替换成 http://ninghao-wpc.com  ... 
wp search-replace 'http://ninghao-wpc.dev' 'http://ninghao-wpc.com'
回车 ..   成功以后，会提示替换了多少个地方 ...  
再回到浏览器 ...  刷新一下 ...这里之前的 ninghao-wpc.dev 已经都替换成了 ninghao-wpc.com 。   现回到打开的页面 ...   刷新  ...   现在网站也显示正常了。


