00-00-课程介绍

Emmet 是一个编辑器的小插件，它支持很多种编辑器。Emmet 定义了一些方法和动作，可以让我们很快速的去撰写或者编辑 HTML 和 CSS 代码。
首先我们学习一下基本的语法去撰写 HTML 代码 …    比如元素的写法 …  给元素添加属性 … 一般的 ID 属性，类属性，还有其它的属性 …. 
 怎么样在元素的下面包含子元素 … 如何给元素添加兄弟元素 …  
我们可以重复输出元素 .. 在重复的元素里面使用序号 …   去定义群组来创建更复杂的代码结构 ….    
然后我们会介绍 Emmet 的 CSS 样式的写法 …  介绍一下 CSS 属性的前缀，快速更新相关属性值的方法 … 
最后再学习一下 Emmet 里面定义的一些动作 … 
怎么样快速选择标签对 …  在开始标签与结构标签之间切换  …  
使用缩写形式去包装已有的内容等等 … 
看了这个课程以后 ，我想你不会想用其它的方法去写 HTML 和 CSS 代码了。


00-01-安装 Emmet

Emmet 这个插件支持很多种编辑器，在这个课程里我们会用 Brackets 这款编辑器来演示 Emmet 的使用 …  你可以在这个地址下载到 Brackets 编辑器。
然后启动 Brackets ….  
点击右上角的这个模块的小图标 … 就是这个小闪电下面的这个图标 … 可以打开 Brackets 编辑器的插件管理界面 …
在这里，我们可以安装或者卸载 Brackets 编辑器的插件  … 
点击 Available 这个选项卡 …   
然后在搜索框里搜索 emmet …. 
找到以后，点击 安装  … 安装成功以后，在菜单栏上，会多出一个 Emmet 菜单 …
打开这个菜单  …  确定已经勾选了这个 启用 Emmet …
这样，我们就可以在 Brackets 编辑器上，使用 Emmet 这个插件去写代码了 …. 


00-02-创建 HTML 文档的基本结构

创建一个空白的 HTML 文档，使用 Emmet 插件可以非常容易做到。比如我们要创建一个 html5 类型的文档，在这个空白的 html 文件里，输入一个 ! 号。然后按一下 tab 键…  
Emmet 会给我们准备好一般的 html 文档需要的东西 … 文档的声明，还有一些基本的标签 ..  
首先我们要修改的地方可能就是这个 title 标题标签  …  Emmet …
然后是 html 标签里的 lang 属性，它可以设置文档的语言，现在是 en ，表示英文 … 我们可以改成 zh-hans ，如果文档是繁体中文的话，可以把它的值改成 zh-hant  .. 
css
下面我们可能需要把文档要用到的 css 样式表链接过来 ..  直接输入 link … 按下 tab  …  在 href 属性里，可以指定样式表的位置和名字 … 
或者，可以用一个 link:css  …   在 href 属性里，会自动添加一个默认的样式表 …  这里我们直接修改它的名字就行了 … 
在 css 目录下面有一个 bootstrap 的样式表 … 把它嵌接到这个文档上来 … 
css/bootstrap.min.css
想去给打印设备链接一个样式表，可以输入 link:print  ….   注意在这个 link 标签里面，会多了一个 media 属性，属性的值是 print ，表示这个样式表是专门针对打印设备的  … 
想直接在这个网页上去定义点样式，这些样式可以放在一组 style 标签里， 我们可以直接输入 style ，然后按一下 tab 键 … 
favicon
网页上可以设置一个小图标，这个小图标可以显示在浏览器的标签栏上 …  链接这个小图标同样可以使用 link 标签  … 
使用 emmet 的方式，我们只需要输入 … 
link:favicon 
viewport
响应式的网页设计一般都需要设置一个 viewport  …  
输入 … meta:vp  … 
你可以根据自己的需要去设置这个 viewport  … 不过一般使用这个默认的设置就行 … 
script
嵌入网页需要的脚本文件，用的是 script 标签 …  输入 script:src … 按下 tab  … 
直接在 script 标签上的 scr 属性里，输入脚本文件的位置和名字 … 
我们也可以把一些脚本代码放在一组 script 标签之间 ..    script … 


01-01-元素的缩写

安装了 Emmet 插件以后，输入一组标签的时候我们不再需要输入整个标签，只需要使用元素的名字就行，不用在它的周围添加尖括号 … 
比如需要一组 div 标签，可以这样 … 直接输入 div ，然后按一下 tab 键 …    Emmet 会自动补齐标签的其余的部分 … 编辑点会在这组标签之间，可以很方便的去输入标签里的内容 … 
如果我们输入的元素名称不存在，同样会把它转成一组标签 ….  比如输入 hello … 
另外 Emmet 为一些 html 元素创建了简写的形式，也就是元素的别名，比如需要一组 blockquote 元素 … 它的简写形式是 bq … 
article 标签的别名是 art  … 
section 标签的别名是  sect …  
还有 header 页头标签  …  是 hdr  …    对应的是页脚标签 …  footer  …  猜一下它的别名 …  是 ftr  … 
在 Emmet 的 Cheat Sheet 备忘表里，找到 HTML 区域，在这里，你可以找到所有 Emmet 定义的元素的缩写形式。


01-02-子元素  >

在使用 emmet 的缩写形式来创建 html 代码结构的时候，可以使用嵌套。在元素里嵌套它的子元素，可以使用大于号（>）。
比如在一个无序列表 ul 元素里，嵌套一个它的子元素 li 元素 …    先输入一个 ul  .. 后面加上一个大于号，如果你学习过宁皓网的 CSS3 选择器的课程，你会知道，这个 > 号表示元素的子元素 …  在它的右边输入大于号左边的元素的子元素的名字 …. 这里就是 li 元素 …   按下 tab 键 … 
得到的代码就是一组 ul 元素里嵌套一个 li 子元素  .. 
这个 ul>li 有个更简单的形式，（#撤回）.... 直接使用 ul+   …  这个简写形式会得到同样的结果  … 
类型的还有 ol+  … 它是 ol>li 的简写形式 … 也就是在 ol 有序列表元素里，嵌套一个 li 元素 … 
table
嵌套可以是多个级别的，比如一个表格，先是 table 元素，它里面是 tr 子元素，表格的行，tr 子元素里是 td 子元素，也就是表格行里的数据单元格 … 
table>tr>td …   按下 tab … 
这个表达式也有一个更简单的形式 … 直接使用 table+  … 
select
一个选择列表 select 元素里，包含一个选项元素 option  …  select>option  ….  它也有个简写形式 … 输入 select+
…  


01-03-兄弟元素  +

Emmet 的代码缩写形式有点像 CSS 的选择器。比如在元素里面添加一个子元素，使用的符号是大于号。使用 + 号，我们可以用来表示元素的兄弟关系。
比如我们需要一个 h3 元素，这个元素有一个段落类型的兄弟元素 … 
h3+p … 按下 tab 键 … 
得到的代码结构就是 h3 和 p 是兄弟关系  … 因为它们在同一个级别上 … 
dl
组合之前介绍的添加元素子元素的大于号 …  一个Definition lists ，也就是 dl 元素下面有两个子元素 … dt 还有 dd  …  dt 和 dd 的元素是兄弟 … 
输入 dl>dt+dd …  
dt 是定义词汇的名字， dd 是词汇的描述或者解释 … 
这个表达式也有个简单形式 …    dl+


01-04-向上级别 ^

在 Emmet 的缩写语法里，^ 这个小符号也有特殊的意义，它可以让元素往上一个级别，如果使用多个 ^ 符号的话，表示往上多个级别 … 
比如这个例子  … dl>dt+dd
它得到的结果就是 dl 元素里有两个子元素， dt 和 dd ， dt 和 dd 是兄弟关系  … 如果你想继续添加一个元素，这个元素跟 dl 元素是兄弟关系的话，我们就需要向上一个级别 … 
在后面输入一个 ^  … 比如添加一个 div 元素 … 
dl>dt+dd^div
这样得到的代码里， dl 元素跟 div 元素是兄弟关系  … 
我们再试一个更复杂一点的情况  …  在 dd 元素里添加一个 span 子元素 … 
然后我们想再添加一个 div 元素，这个 div 元素要跟 dl 元素是兄弟  … 
这样我们就需要向上两个级别  …   所以需要两个 ^  … 
如果向上一个级别的话，这个 div 跟 dt 和 dd 是兄弟  … 向上两个级别，这个 div 元素跟 dl 元素就是兄弟元素了 … 


01-05-多次重复与群组 * & ( )

使用 * 号，再加上具体的数字，表示重复输出指定次数的元素 ….    比如我们想要一个无序列表 .. 里面有 5 个列表项目 … 可以这样 …  
ul>li*5
再试下表格 ..  想得到一个有三行，每行有5个单元格的表格 ..  输入
table>tr*3>td*5
群组
使用群组可以创建更复杂的代码结构，定义群组可以使用圆括号 … 比如像这个结构  … 
div>header+section+footer   … 
一个 div 元素里面有三个子元素 … header, section, footer   ….    这三个子元素的关系是兄弟  … 
如果你想在 header 元素里面再去定义复杂的结构，我们可以先用一组括号把它括起来 … 在括号的里面，可以继续去定义 header 部分的结构  … 
div>(header>ul>li*5>a)+section+footer 
这个用括号括起来的部分会作为一个群组，单独去处理 … 这样得到的代码 …  header  ，section，footer 仍然是兄弟  ..  
在 header 元素还包含它的子元素 … 一个无序列表  …  列表里有5个项目，每个项目里都有一个链接  … 


01-06-属性操作符 [ ]

在 Emmet 的缩写语法里，给输出的元素添加 ID ，可以使用 # 号，再加上 ID 的名称 ..  添加类，可以使用 . ，再加上类的名称 … 
div#message>div.alert.alert-success 
一个 div 标签  … 上面有一个 message 的 ID ，在它里面是一个 div 类型的子元素 … 在这个子元素上，有两个类 …  alert  … 和 alert-success  … 
自定义属性
除了元素的 class 和 id 属性，输出其它的属性，可以把属性的名称和值放在一组方括号里 … 
比如一个 a 标签  ..  在它上面添加两个属性 … alt 属性 … 还有 title 属性 …   把这些属性放在一组方括号里 …  属性之间用空格分隔开 … 
可以先不为属性指定值 …  
把光标放在这个句子的最后 …  然后按下 tab  … 
默认编辑的点会在一个属性值的引号里 ..   下一个编辑点是这个 alt 属性 …  有两个快捷键可以在不同的编辑点之间来回跳转… 
跳到下一个编辑点上可以使用 alt+command+→ …  windows 应该是 alt+ctrl+→
跳转到上一个编辑点，可以使用快捷键 alt+command+←   … windows 上是 alt+ctrl+←
我们也可以直接指定属性的值 …
a[alt=hello title=hello]
在属性名字的后面可以直接指定属性的值  … 
表单
再试一个 input 元素 …  可以使用 type 属性，指定它的类型 … 
input[type=file]
这样可以在网页上添加一个上传文件的表单元素 …  它还有一个简单的形式 .. 
input:file … 
这个 input:file 还有一个更简单的形式 … 直接输入 input:f  …  f 就是 file 的简写 … 
同样可以得到一个上传文件的表单元素 … 
Emmet 为其它类型的 input 元素也添加了类似的简写形式 …. 比如 input:s … s 表示 submit  … 这样会可以添加一个 type 属性是 submit 的 input 元素 … 


01-07-序号 $

重复输出元素可以使用 * 号，再加上重复的次数 …  想给这些重复输出的元素添加序号，可以使用 $ 符号  ….  一个 $ 符号表示一位数 … 
比如我们要输出一组有 5 个项目的列表 …  在每个列表项目上都添加一个类，第一个列表上的类名是 item1 ，第二个列表上的类名是 item 2  … 依次往下排 … 
ul>li.item$*5 
这里的 item 是类名的前缀，后面加上一个 $ 符号，它是项目位置的序号 … 第一个项目上，这个 $ 符号就会是数字 1  …  
得到的结果就是，第一个列表上的类名是 item1  …  一共有五个列表项目，所以最后一个列表项目上的类名是 item5 … 
再看一下使用两个 $ 符号的效果 … 
ul>li.item$$*5  
两个符号表示两位数的序号 …   我们还可以把这个序号倒过来 …   在这个 $ 符号的后面，加上一个 @-  ..  
ul>li.item$@-*5  
现在，第一个列表项目上的类是 item5  … 也就是最后一个序号 …  
在 @ 符号的后面，把 - 线替换成具体的数字，它的意思就变成了指定一个起始的位置 …  
比如我们要从第3个开始 … 
 ul>li.item$@3*5  
现在，排第一的列表项目上的类名是 item3 。因为我们设置了从第3个开始 …   指定序号的开始并且把它倒过来的话，可以使用一个 @ 符号 ，加上一个 - 线，再加上开始的位置 … 
 ul>li.item$@-3*5   
这样最后一个列表项目上的类名会是 item3 …. 
文本
这个序号我们也可以应用在别的地方，比如元素里的文字  …   元素的文字可以放在一组花括号里面 … 
ul>li.item${项目$}*5 
得到的代码里面，元素里的文字上也会有序号 …  


02-01-CSS 缩写

Emmet 插件几乎为所有的 CSS 属性都创建了缩写形式，使用这些缩写形式可以快速的撰写 CSS 样式。
比如，margin 这个属性，它的缩写形式就是一个 m   … 
在缩写形式后面可以直接加上属性的值 ..   m20 …   如果不加单位的话，默认的单位就是像素  …  
我们也可以加上单位的名称 ….  比如 m20em … 
如果是百分比的值，可以使用一个 % ，或者字母 p …
CSS 属性可能会有多个值，不同的值之间我们可以使用 - 线分隔一下 … 
m20-30
有两个快捷键，可以快速的选择上一个或者下一个项目 … shift+command+,  可以选择上一个项目 … 
按一次先选择的是最后一个属性的值 … 然后是上一个值 …  然后是整个值 …  接着是整个样式声明 … 
最后会选择样式的选择器 … 
shift+command+.
可以选择下一个项目 … 
其它
Emmet 定义的属性的缩写我们一般都能猜到 … 比如，上外边距，属性名是 margin-top …  它的缩写形式应该就是 mt  … 
下外边距是 margin-bottom  … 它的缩写是 mb  … 
ml  是 margin-left 的缩写  …   mr 是 margin-right 的缩写  … 
:
有些有固定值的属性，可以使用属性的缩写形式，后面加上冒号，然后是值的缩写形式 … 比如 position 这个属性 …  设置为 absolute 的话，输入 pos:a
浮动元素到左边，可以使用 float 属性，把它的值设置成 left  ..  fl:l
fl 是 float 的缩写，冒号后面的 l 是 left 的缩写 … 
+
有些缩写形式里有一个 + 号 …   比如 bd+
编辑的地方是在这个边框的宽度值这里 …   shift+command+↑ 可以给值加上 1 …   windows 上应该  shift+command+↓   … 可以减掉 1 …. 
想了解更多的缩写形式的 CSS 属性，可以参考 Emmet 的 cheat sheet  … 备忘列表！
http://docs.emmet.io/cheat-sheet/


02-02-前缀

有些新的 CSS 属性，浏览器在实施的时候可能会在属性名称的前面加上特定的前缀。在用到这样新属性的时候，加上这些特定的前缀是为了更好的兼容性。
不同的浏览器使用的前缀都不一样，比如 webkit 核心的浏览器，比如 chrome 浏览器，safari 浏览器 … 会使用一个 -webkit- 前缀  …  前后各有一个小横线 .. 
-moz- 这个前缀是 mozilla 用的 … 比如 firefox 浏览器 …  
微软的 ie 浏览器会使用 -ms- 这个前缀  …   -o-  这个前缀是 opera 浏览器使用的前缀  …  
这些前缀都有缩写形式，我们可以在属性前面指定这些前缀 …  Emmet 也会自动在一些属性前面加上特定的前缀  … 
比如 border-radius  这个属性 …   它果边框圆角的属性  … 它的缩写是 bdrs  … 
你会发现，除了标准的 border-radius  …. 这个属性以外，还有一个带 -moz- 前缀的 border-radius  …  还有带 -o- 前缀的 border-radius  … 
这些前缀是 emmet 自动给我们加上的 .. 
如果你想手工指定想要的前缀 … 可以这样做  …  先输入一个小横线，然后是前缀的缩写形式 …   w 表示 webkit 前缀，m 是 moz  前缀，s 是 ms 前缀  ..  o 就是 o 前缀  … 
比如我们只想使用 webkit 前缀  …   输入一个 w   … 我们可以继续指定其它的前缀    … 最后再加上一个小横线  ..  
然后是属性的缩写 　…    -wmso-bdrs
这样扩展出来的样式包含所有的浏览器的前缀  … 
输入属性的值  …   5px  …. 
这里我们可以使用快捷键，shift+command+r  … 它可以把这里输入的值，自动添加到相关的属性里面 …. 
修改其中的一个属性的值  …  再按一下 shift+command+r  ….  可以把更新之后的值应用到其它的相关的属性里 … 


03-01-选择标签对

我们可以快速选择当前位置的标签对或者标签里的内容，我们可以向外选择，或者向内选择  … 这两个动作分别都有自己的快捷键 … 向外是 command + b … 
向内的快捷键是 shift + command + b  … 在 brackets 上是 shift + command + b  …  
下面我们去试一下  … 先创建一个简单的代码结构  …. 
div>ul>li.item*5 
当前位置是在 li 标签的里面 …  向外选择匹配的标签对， command + b  …  会选择当前这个 li 标签  … 
再按一下 … 会选择 ul 标签里面的所有的东西   …  继续向外去找匹配的标签对 …   再按一下 command + b  … 选择的是  ul 标签  … 再按一下选择 是 div 元素里的所有的东西 …  最后选择的是 ul 标签的父元素， div 标签  … 
移动到当前这个标签的结束标签，可以使用 shift + command + t  …  再按一下可以回到标签开始的位置  … 
向内可以使用 shift + command + b  … 


03-02-用缩写形式包装已有内容

我们可以使用 emmet 提供的缩写形式去包装已有的内容  ….  用到的快捷键是  shift + command + a … 
这里有一段文字，不用在意当前位置是在哪一行  …  按一下 shift + command + a … 
输入 div.container  …  回车 … 
会一个组带 .container 类的 div 标签包装这段文字 … 
单独行
我们也可以单独为每一行添加一个包装 … 
位置可以随便在哪一行 … 按下 shift + command + a  …. 输入 ul>li*  …  注意 * 号后面不用加具体的重复的次数 …  emmet 会自动给我们算好 … 按一下 ok 或者 回车键 … 
你会看到，会用列表元素包装每一行内容 … 
去掉列表符号
这里每行前面都有一个小星号，在包装的时候我们可以去掉内容前面的这个小星号或者序号…  （撤回）
shilft + command + a …  ul>li* … 后面加上一个 |t  … 这个小 t 就是 trim 的简写 … 就是修整的意思 … 
在每行内容周围包装了指定的元素，同时去掉了每行内容前面的小星数 … 
控制输出
在为已有内容添加包装元素的时候，我们可以控制内容的输出的位置，可以在缩写语法里面，使用 $# 来表示内容 … 也就我们可以使用 $# 把内容放在任何地方 …
shift + command + a  …  一组 ul 标签，里面是 li 子元素 … 给它添加一个 title 属性  … 属性的值就是当前行的内容 … 所以这里可以用一个 $#  …
后面加上一个 * 号 … 然后为 li 元素添加了一个文本类型的节点 … 节点的内容就是当前行的内容  …   文字节点的内容要放在大括号里 … 里面用 $# 表示当前行内容 … 
ul>li[title=$#]*>{$#} 
得到的结果就是每行内容被  li 元素包装， li 元素上的 title 属性的值是当前行的内容 … 


03-03-转到编辑点与选择编辑项目

Emmet 的转到编辑点的动作，可以快速的在可能要编辑的地方来回跳转，比如一组空白的没有内容的标签之间，没有设置值的属性，这些都是编辑点 … 
快捷键 alt + command + →  可以转到下一个编辑点上，windows 上应该是 alt + ctrl +  →  …   alt + command + ← 可以转到上一个编辑点上 … 
跟转到编辑点类似的动作还有选择编辑项目…   标签的名称可以编辑的项目，标签的属性是编辑项目，属性的值也是编辑项目 … 
快捷键 shift + command + .  可以选择当前位置的下一个编辑项目 … 
shift + command + ,   这个快捷键可以选择当前位置的上一个编辑项目 .. 
测试 
我们先试一下转到编辑点 …   先随便选中一个位置 …  (蜡炬成灰泪始干。</p>)
按一下 alt + command + →     转到下一个可以编辑的点，就是这个空白的 <dt> 标签之间 …  再按一下这个快捷键 …   会转到下一个编辑点 … 就是这组 <dd> 标签  …  
它的后面没有可编辑的点了 …   我们再试试转到上一个编辑点 …  可以使用 alt + command + ←
先是 <dd> 标签之间 … 然后是 <dt> 之间 …   最后这个编辑点是 <h1> 标签里面的这个空白的 class 属性里面 … 
编辑项目
下面我们可以再试一下选择编辑项目 …     shift + command + .    可以选择下一上编辑项目…    会选择 h1 标签里的这个 class 属性 … 
再按一下 … 会选择下面的 <p> 标签  …  然后是下面的 dl … dt … dd …. 接着是 p 标签  …  a 标签  …   这个 a 标签里有一个 class 属性  …   它也是一个编辑项目 … 
再往下就是属性的值这个编辑项目 …   接着是每一个具体的值  … 
shift + command + ,   这个快捷键可以选择前一个编辑项目 …


03-04-切换注释

切换注释是一个非常有用的功能，使用 Brackets 编辑器的 Emmet 插件，可以使用快捷键 command + \ 来切换注释  …    切换注释的功能可以用在 html 文档和 css 文档上 … 
测试
先选中一个位置 …   如果不选择具体的注释内容 …   按一下 command + \ ，可以注释当前这行内容  …  
再按一下可以去掉注释  … 
或者我们也可以选中想要注释的内容  ….   然后按一下 command + \  …  这样会注释掉选中的内容 …   再按一下会去掉注释 … 
css
再试一下 css 文档  …  选中一个位置 … 不特别选择要注释的内容 … 会注释当前这个声明  …   再按一下可以去掉注释  … 
我们也可以选中要注释掉的内容  …     这样会注释掉所选择的内容 …   再按一下，可以去掉注释  … 


03-05-选择行与合并行

选中当前行，可以使用快捷键 shift + command + L …   这里的 L 表示 Line ，也就是行的意思 …  
合并多行内容成一行可以使用快捷键 shift + command + M …   M 表示 Merge … 是合并的意思 … 
我们把光标放在一行的某个位置上 … 按下 shift + command + L  … 可以选中当前这行内容 .. 
下面我们再试试合并多行成一行 … 光标放在这个用一组

 标签包装的多行内容上 …   按下  shift + command + M 
会把这组内容合并成一行 … 
或者我们也可以先选中多行内容 …  然后再按下 shift + command + M  … 
可以把它们合并成一行 … 


