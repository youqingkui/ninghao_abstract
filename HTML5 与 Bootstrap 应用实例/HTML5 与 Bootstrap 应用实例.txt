00-01-准备

现在你看到的就是我们要做网页的设计图，在这套课程里我们一起使用 HTML5 配合 Bootstrap 架构做出这张网页，我们会在 WordPress 主题课程里，把这个设计变成真正的网站。
推荐大家先看一下宁皓网的 CSS 基础教程，还有 Bootstrap 架构的教程。
文本编辑软件
想要创建网页我们首先要选择一款文本编辑软件，Windows 用户可以使用 Adobe Dreamweaver、 notepad ++　，　Mac 用户可以使用 Textmate，espresso ... 这个课程我们会用 espresso 做演示。网页设计并没有特别要求用哪款软件，选择一个自己用着顺手的就可以了。
准备目录
下面我们去给要设计的网页准备一些资源，先创建一个目录 ...  重命名为  fenikso ，我们可以把网页和网页需要的相关资源都放在这个目录里面 ...
打开这些目录，在它的里面，创建一个叫 images 的目录...  我们可以把网页上要用到的一些图片放在这个目录里面 ... 比如网页的标志 ，背景图片，小图标等等 ...
再创建一个 js 目录 ...  在这里可以放一些网页上要用到的脚本文件 ... 
打开课程资料包的 00-01 ...  
这里有个 content 目录， 里面放的是一些图片...  在后面的视频里需要用到 ...  
另外还有一个 jquery-1.8.3.min.js ...     Bootstrap 架构的 jQuery 插件需要它才能工作 ... 
先选中它们 ...  然后把它们放在网页项目的目录里 ...
把 jquery 这个脚本文件放在  js 这个目录里面 ...
espresso
下面打开我们在创建网页时要用到的文本编辑器 ...  这里我用的是 espresso ....  点击 新建项目 ...  找到网页项目所在的目录 ..
点击 选择 ...   
这样我们可以直接在这个软件上管理网页项目里的所有文件 ...   很多其它的文本编辑软件都有类似的功能 ...  比如你用 Dreamweaver 的话，可以新建一个站点 ...
在下面视频里，我们去定制一下 Bootstrap 架构 ...


00-02-定制 Bootstrap 架构

首先我们去下载 Bootstrap 架构，http://twitter.github.com/bootstrap/，点击页面上的 Download 按钮可以下载到最新版的 Bootstrap。
不过这里我们可以先定制一下，点击导航菜单上的定制 Customize ...
在这里，你可以选择想要在我们的项目里使用的 Bootstrap 组件，这些组件就是一些定义好的 CSS 样式，这些样式会在 boostrap.css 这个样式表里 ...
我们要做的这个网页不需要响应式的设计，所以 ...  可以去掉 Responsive 下面的所有东西 ...  这样这部分样式就不会包含在 boostrap.css 这个样式表里 ...
第二部分是选择想要使用的 jQuery 插件  ...   你可以根据自己的需求去选择想要使用的 jQuery 插件  ..  选择的这些 jQuery 插件会包含在 bootstrap.js 这个脚本文件里 ...
第三部分定制的内容是一些变量 ...  你可以修改这些变量来改变 Bootstrap 架构的样式 ...  比如各种颜色  ... 字体，字号 ... 等等
我们可以根据自己的设计来修改这些变量 ...  下面我们改一下链接的颜色 ...  先回到网页的设计图 ...  点击工具栏上的前景色 ...  然后使用吸管工具选择页面上的某个颜色 ...  这里我们事先定义好了一些色块 ...  点击可以拾取色块上的颜色 ...  
复制一下颜色的值 ...  
再回到 Bootstrap 架构的定制页面 ...  找到链接   Links  ...  @linkColor 就是链接的颜色 ...  先输入一个 # 号，然后把刚才复制的颜色值粘贴过来 ... 
Bootstrap 架构会根据这个颜色去改变一些相关的设计的颜色... 比如链接的颜色，悬停在链接上的颜色，悬停在下拉菜单上的颜色，按钮的颜色等等 ....
浏览到这个页面的底部...  点击 定制并下载 按钮 ...  
这样我们可以把定制的 Bootstrap 架构下载到自己的电脑上 ...
找到下载下来的 Bootstrap ...  先解压一下 ...  
然后把它放在网页项目的目录里 ....


00-03-网页的 head 部分

我们先在网页项目的根目录下 .... 创建一个网页文件 ....  新建文件 ....  命名为 index.html ...
网页的最开始我们要声明一个这个文档的类型，输入 <!DOCTYPE html> ，这是 html5 类型的文档声明，表示这是一个 html 文档，浏览器会读取这个声明判断如何显示文档里的内容。
网页的所有内容会放在一组 <html> 标签里面 ...  <html> ，结束用 </html> 。
在这个标签里，我们可以加上一个 lang 属性，说明一下内容的语言，输入 lang="zh-CN" ，引号之间是语言的代码，zh-CN 表示的就是简体中文，如果是英文，语言的代码应该就是 en 。
接下面是网页的 head 部分 ... 我们使用 <head> 标签来标记这部分内容，输入 <head> ，在这个标签之前，我们可以按两下空格键，缩进一下，这样可以记网页代码的结构更清晰。
使用 </head> 结束 ...
在这组 <head> 标签之间，我们可以设置网页的页面标题 ，关键词，描述，字符的编码格式， 使用的样式表和脚本文件等等，这些内容不会真正显示出来。浏览器或者搜索引擎都需要这部分内容来判断如何处理这个网页。
下面我们来看几个在 <head> 部分常用的东西。
先按两下空格，然后输入 <meta charset="utf-8">，这行代码告诉浏览器，网页上的字符使用 utf-8 的编码格式。
另外还有一些 <meta> 标签，比如描述网页的描述，可以输入 <meta name="description" content="凤凰社是一个分享感动的地方"> 。
name="description" 表示这行代码是网页的描述，描述的具体内容就是 content 后面里的内容，也就是 凤凰社是一个分享感动的地方，这行文字是这个网页的一个大概的内容。
搜索引擎可能会用到这个描述内容，有可能把它作为搜索结果的一部分。
另起一行，我们继续输入其它的内容， <title> </title> ，在这组 <title> 标签里，我们可以定义网页的页面标题。 输入 凤凰社 ...
这个标题会显示在浏览器的标题栏或者标签栏上，搜索引擎会把 <title> 标签之间的内容作为搜索结果的标题。
链接样式表与脚本文件
下面我们可以把网页用到的样式表和脚本文件链接过来。另起一行，输入 <link rel="stylesheet" href="bootstrap/css/bootstrap.css">
href 后面就是样式表的具体位置。这里我们使用的是一个相对的地址，也就是相对于这个网页，样式表所在的位置， 相对于 index.html 这个网页，bootstrap.css 这个样式表在 bootstrap 目录下面的 css 这个目录里面。
我们再把需要的脚本文件链接到网页里，输入 <script src="js/jquery-1.8.3.min.js"></script>，使用 <script> 标签我们可以把脚本文件链接到网页里，src后面就是脚本文件具体的位置，相对于 index.html 这个网页，jquery-1.8.3.min.js 这个脚本文件在 js 这个目录下。
复制一下这行代码，我们可以链接其它的脚本文件...
修改一下 src 属性里的值，我们把 bootstrap.js 这个文件链接过来，相对于 index.html 这个文件，bootstrap.js 是在 bootstrap/js 这里 ... 
如果网页需要加载其它的样式表和脚本文件，你可以使用这里介绍的形式去把它们链接过来。这样浏览器的显示这个网页的时候，会去下载这些样式表和脚本文件，然后决定如何处理并显示网页里的内容。
保存一下这个网页文件 ... 
下面我们可以预览一下这个网页 ...  在网页的目录里，找到刚才我们创建的 index.html 这个网页 ...
除了在这个页面的标签栏上会显示在 <title> 标签里定义的页面标题以外，页面上没有显示任何内容，因为我们还没有真正的输入网页的内容。 在下面视频里我们继续编辑这个网页。


01-01-页头部分的设计

这个视频我们处理一下网页的页头部分的内容，先来看一下我们的设计。网页的最开始这排内容，左边是一个标志图像，右边是个搜索框。
首先我们要让这行内容居中显示，也就是不管浏览窗口有多大，这排内容始终在中间显示。我们可以先把他们放在一个盒子里，给这个盒子设置一个宽度，再让这个盒子居中显示。
然后我们再添加两个盒子，一个放标志，一个放搜索框。
这里我们需要用到图像标志，可以把图像这块切下来，保存成一个文件。
切片
先选择切片工具 ...  按住鼠标左键，在你需要切片的地方，拖出一个你想要保存成图像的区域，这块区域会用蓝色的线标记出来，上面还有一个编号。放大设计图可以再调整一下这个区域的大小和位置  ... 
你可以点击工具栏上的缩放工具，使用快捷键 z 可以直接切换到缩放工具。
或者我们可以按住 空格键，同时 mac 用户再按住 command ， windows 用户按住 ctrl 键。这样你会发现鼠标指针会变成一个放大镜 ...  
这个时候，用鼠标左键点击设计图上的某个位置，可以放大显示 ...  
如果再同时按住 alt 键，鼠标指针会变成带减号的放大镜，点击设计图，可以缩小显示 ...
或者我我们可以直接左右拖动鼠标来缩小或者放大 ...
放大到合适以后，松开鼠标...  按住空格键，用鼠标拖拽，可以移动显示的位置 ...  
然扣我们调整一下切片的大小和位置 ...  
调整好以后，mac 用户按住 command ，windows 用户按住 ctrl 键，这样会暂时切换到 切片选择工具 ...
双击这个切片  ... 修改一下这个切片的名称 ...  注意切片的名称会作为切片图像的名称，所以我们不要使用中文，可以使用字母，数字，下划线或者横线来定义 ...  输入 logo 
下面我们要把这个切片存成图像 ...  
点击 文件 ...  存储为 Web 所用格式 ...  
然后点击选中这个切片  ...   我们可以修改一下这个切片图像的格式 ... 
在右边 预设 这里，你可以看到当前的格式 ...  现在是 PNG-24 这种格式，这里格式支持图像的透明效果，不过生成的图像文件会比较大。在左下角这里，会显示图像的大小，现在是 7K 左右
这里我们的标志图像不需要透明效果，而且这个标志图像上的颜色比较少，所以可以选择 PNG-8 这种格式  ...
注意图像的变化 ...  现在图像的大小是 4K 左右，比刚才的要小一些，并且标志图像不会有太明显的差别。
设置好以后，点击 存储 ...
 选择一个保存的位置  ...  然后在 切片 这里，我们选择 选中的切片 ...  这样 Photoshop 只会为我们导出选中的切片图像 ...
回到桌面 ...  在 images 目录的下面你会看到导出来的切片图像， logo.png ... （# 按一下空格预览）
下面我们可以把这个图像放在网页的目录里面 ....  
打开 fenikso 这个目录，在这里新建一个 images 目录  ...  我们可以把网页需要用到的图片都放在这个目录里面 ... 
把 logo.png 拖入到 images 这个目录里 ... 
下面视频我们编写代码，完成页头部分的设计。


01-02-页头部分的代码

下面我们可以编辑网页的内容的代码 ...  在网页代码模式后面是这个网页的视图模式，它可以实时预览网页的变化 ... 相当于我们用浏览器打开了这张网页 。
在网页的主体部分，先输入一组 <body> 标签 ...
在这组标签里，我们再去实施页头部分和其它部分的设计。在前面我们看到了，页头这排内容分成两块，左边是标志，右边是搜索栏 ... 
对于一个区域的头部内容，我们可以使用 <header> 标签来标记。先输入一组 <header> 标签 ...
然后我们可以设计这部分内容的布局，这里我们可以使用 Bootstrap 架构设计好的布局形式 ...
先输入一组 <div> 标签 ...  然后在这组标签上添加一个 .container 类 ...  bootstrap 定义了这个类的样式 ...
在它的里面再输入一组 <div> 标签 ... 在这组标签上，添加一个 .row 类。然后在这组标签里我们可以再添加两组 <div> 标签 ...
在第一组 <div> 标签里添加 标志 内容，第二组 <div> 标签里添加搜索框 ...  
Bootstrap 把一排内容的宽度分成了12份，这里我们让这两组 <div> 标签各占一半的宽度。
12 除以 2 等于 6，在第一组 <div> 标签里，添加一个 span6 的类 ...  这样这组 <div> 标签会占用12份宽度的6份，也就是占用一半的宽度。
同样在第二组 <div> 标签里，也添加一个 span6 类 ...
在第一组 <div> 标签里，我们添加标志的图像 ...
在网页中插入图像，可以使用 <img> 标签，输入 <img src="images/logo.png" alt="凤凰社">
src 属性的值就是l图像的位置 ... 我们的l标志图像相对于这个网页来说是在 images 目录下面 ... 
后面 alt 属性是图像的替代文字，为 <img> 标签添加一个 alt 属性，简单的描述一个图像的内容 ...
如果你想让用户点击这个图像链接到某个位置，可以在它的周围添加一组 <a> 标签 ...
<a> 标签的 href 属性可以定义链接到的位置，这里我们先用一个 # 号代替，你可以把 # 号替换成任何位置 ...  在 <a> 标签里，我们还可以添加一个 title 属性，描述一下这个链接会把用户带到哪里去 ... 
输入 title="回到首页" ...
搜索框
下面我们来设计一下搜索框，Bootstrap 框架设计了一些很漂亮的表单元素， 我们可以先去看一下 ....
打开 twitter.github.com/bootstrap  ...  打开 Base CSS ...  然后点击 Forms  ...  在这里你可以查看 Bootstrap 为表单相关的设计 ...
找开一个合适的设计  ... 
比如这个 ... 一个简单的文本框，加上一个漂亮的按钮 ...  想要同样的效果，我们可以复制一下这个设计的代码结构 ...
回到我们的网页 ...
找到 <header> 部分里面的第二组 <div> 标签  ...  把刚才复制的代码粘贴过来 ...
修改一下按钮文字 ...  输入 搜索 ，在这个 <input> 元素上使用了一个 span2 的类，这个类决定了文本框的长度，这里我们改成 span3  ...
现在，页面中会显示一个标志，还有一个搜索框 ...  下面视频我们修改下这页头部分的样式 ...


01-03-页头部分的样式

Bootstrap 里定义了很多实用的样式，但是不能解决我们遇到的所有问题，我们要为页面手工添加一些样式。下面我们先去创建一个样式表，然后再把它链接到网页中 ....
新建一个文件，命名为 style.css，样式表的后缀名是 .css 
回到网页，复制一行链接样式表的代码  ...  修改一下 href 属性的值 ，style.css 和这个网页在同一目录下，所以这里，我们直接输入 style.css  ...
注意网页中使用的样式表的顺序，下面的样式表可以覆盖上面的样式表里定义的样式，如果你想用我们手工创建的样式表，覆盖 bootstrap.css 样式表里定义的样式，我们要把 style.css 这个样式表放在 bootstrap.css 这个样式表的下面。
下面我们手工为页头部分的内容添加一些样式，在我们的设计里，标志图像和搜索框的上面跟下面都有一些空白的地方 ...
我们可以在标志图像和搜索框周围的元素上定义 ID 或者 类，通过这些类，在样式表里添加相应的样式。
在 <img> 标签里，输入 id="logo" ，这样我们就定义了一个名为 logo 的 id，注意同一个 id 只能出现在一个地方，也就是如果你在这里使用了一个叫 logo 的 id ，就不能在其它元素上添加同样的 id 。 
找到包围搜索框的元素，在这个 <div> 标签上，也定义一个 id ，输入 id="search" 
这样我们可以使用 logo 和 search 这两个 id 做为样式的选择器，来为这两个 id 所在的元素添加一些样式。
打开网页的样式表 ... 
先输入一点注释的文字，说明一下接下来的样式 ...   注释的开始使用 /*  然后输入注释的内容 ...  注释结束的地方输入 */
另起一行输入样式，先要输入样式的选择器，也就是你想把样式应用在页面中的哪一部分上，这里我们使用 id 做为选择器。
我们要给页头部分里的标志和搜索框的上边和下边添加点边距，这里可以输入
#logo,
#search{
}
这里我们用了两个 id 选择器， # 号表示 id ，后面是 id 的名称，这两个 id 选择器的中间我们用一个逗号分开...  表示在后面大括号里定义的样式，会同时应用在带有这两个 id 的元素上面。
为元素添加边距，可以使用 padding 或者是 margin ， padding 表示元素内部的边距，margin 表示元素外部的边距。
这里我们可以使用内边距。输入 padding: 30px 0 30px 0;  第一个值表示元素上边的内边距，第二值是右边的内边距，第三个值是下边的内边距，最后一个值是右边的内边距。这行样式的意思是给元素的上边和下边各添加一个 30px 的内边距 ... 左边和右边的内边距设置为 0 。
这里我们可以简写这行样式，直接使用 30px 0 ，第一个值表示上边和下边的内边距，第二值表示左边和右边的内边距。
现在页面头部的设计就处理好了。


02-01-主导航的设计

我们的主导航使用了很简单的样式，导航菜单的下面，使用了一条贯穿整个页面的灰色线 ....   每个菜单项并排显示 ...  激活的菜单项的下面有一个 3 像素的绿色边线。
Bootstrap 架构设计好了一些导航菜单的样式，我们可以直接使用，打开 twitter.github.com/bootstrap 
打开 Components ，点击 Navbar ，你可以找到导航菜单的样式，复制一下这段代码 ....
回到我们自己的网页设计里面 ...  在 </header> 也就是 <header> 结束的地方，另一行 ... 把刚才复制的导航菜单的代码粘贴过来 ...
在页面中你会看到一个导般菜单 ...  想让它居中显示我们可以用一组带有 .container 类的 <div> 标签包围住导航菜单 ...
下面我们再修改一下这个导航菜单里的内容 ... 先去掉这个带有 .brand 类的 <a> 标签，因为我们不需要在导航菜单里加上网站的名称 ...
Home 改成 首页 ...  再修改一下后面这两个菜单项 ...  真实婚礼  ...   活动 ... 
导航菜单一般会用无序列表来标记，也就是这组 <ul> 标签 ，在这个 <ul> 标签上要添加一个 .nav 类。
然后每一个菜单项就是一个列表项目，每个列表项目都使用一组 <li> 标签来标记 ... 
在 首页 这个菜单项上添加了一个 .active 类， 在网页的视图模式下，你可以看到这个 首页 菜单项的样式跟其它菜单项的样式都不一样。
这样用户可以很容易区分当前所在的位置属于哪个菜单项 ... 
在这组无序列表的外面用一组带有 .navbar-inner 类的 <div> 标签包围住，在它的外面是一组带有 .navbar 类的 <div> 标签包围。
Bootstrap 为这些类都添加了各自的样式 ...
下面我们可以再添加一个下拉菜单，比如点击 真实婚礼  这个菜单项的时候，会弹出一个下拉菜单  ...
回到 Bootstrap 架构的页面，我们可以找到在导航菜单里添加下拉菜单的代码示例 ...
在这里，先复制一下，<li> ... </li> 之间的代码  ... 这就是一个带下拉菜单的菜单项的代码结构 ...
回过来，替换一下 真实婚礼 这个菜单项 ...
然后修改一下 ...  真实婚礼 ...  在这组 <li> 标签的里面，嵌套了一组 <ul> 无序列表，这个列表里的东西就是点击真实婚礼弹出的下拉菜单 ...
在这里我们添加几个菜单项列表  ...
<li><a href="#">后院婚礼</a></li>
<li><a href="#">复古婚礼</a></li>
<li><a href="#">农场婚礼</a></li>
在网页的视图模式下 ...  点击  真实婚礼 这个菜单项，可以弹出一个下拉菜单  ....
在下面视频里我们按照自己的设计来修改一下导航菜单的样式 ...


02-02-主导航菜单的样式

现在网页上的导航菜单的样式是来自 Bootstrap 架构里的设计 ，如果想把我们的设计加到这个导航菜单上，我们需要覆盖原有的设计的样式。如果你用的是 chrome 浏览器打开的这张网页，右键点击想要查看的地方，然后选择审查元素 ...
你会发现，导航菜单上的样式大部分都是 .navbar-inner 这个类定义的 ...  
勾选或取消勾选 .navbar-inner 类里的样式，你可以看到应用这行样式之前和之后的样子 ...
回到网页的代码模式 ...   在这里我们去掉带有  .navbar-nner 类的 <div> 标签 ...  
同时也要去掉跟它匹配的 </div> 标签 ...  不然页面的布局会出现问题 ...
下面我们再处理一下激活菜单项的样式 ...  
右键点击激活菜单，选择 审查元素 ...
.active
当前选中的是 .active 类元素下面的 <a> 标签，在右边你可以看到应用在这个 <a> 标签上的样式，你可以看到是来自 bootstrap.css 这个样式表里的第 3580 行 ....
点击这个样式的出处，可以打开这个样式表，并显示这段样式 ...
下面我们复制一下这段样式 ...  然后打开我们为网页定制的样式表 ....  style.css 
把复制的样式代码粘贴到这里 ....  
下面我们可以重新定义这段样式，我们把 box-shadow 属性的值都设置为 none;  ...  box-shadow 是为元素添加阴影的样式 ...
再修改一下 background-color ...  这是元素的背景颜色， #e5e5e5 是背景颜色的值，是一种浅灰色。这里我们改成跟背景一样的白色 ...
白色的值，可以使用 #fff ...
根据我们的设计，我们给激活菜单项的下边添加一个绿色的边框 ... 
回到我们的设计图样...   先放大激活菜单项这块的设计  ...   然后点击工具栏上的前景色 ...  这样会打开拾色器 ...  用鼠标点击这个绿色线 ...  在拾色器上会显示这个地方的颜色的值 ...   复制一下 # 号后面的这个颜色的值  ...
再回到网页的样式表 ...  在这个激活菜单项的样式块里，输入 border-bottom: 3px solid #009571   ...  
border-bottom 表示我们要为元素添加下边的边线，3px 是边线的高度 ...  solid 表示是实线 ，后面的 #009571 是边线的颜色值 ...
#navigation
下面我们要为导航菜单的下面添加一条贯穿整个页面的灰色实线 ...  首先我们要选择添加这个样式的元素 ...
回到网页的代码模式 ...  这里我们使用了一个带有 .container 类的 <div> 标签包装了我们的导航菜单...  某部分内容的导航菜单，我们可以使用 <nav> 标签 ...  我们这里的导航菜单是整个页面的导航，，所以可以用一组 <nav> 标签包装导航菜单的内容 ...
在这个 <nav> 标签里，我们再定义一个 id ，输入 id="navigation" ， 这样我们可以使用这个 id 做为样式的选择器，来给导航菜单添加样式 ...
回到网页的样式表 ...  输入 ....  然后输入边线的颜色值 ...  回到网页的图样 ...  用吸管工具，点击边线 ...   这个边线的颜色是 d7d7d7 ...  
回到样式表 ...  输入 d7d7d7 
 #navigation｛
     border-bottom:1px solid #d7d7d7
｝
这样我们就完成了导航部分的设计！


03-01-内容列表块的设计

下面我们开始实施页面主体内容的设计，这部分内容可以分成三块，一块是内容块的列表，然后是一个分页导航，最后是一个导航路径。
我们先做这个内容块的列表，内容块上面由几部分组成，最上面灰色部分代表是一张图片 ... 下面是一个带灰色线的盒子，里面放着内容的标题，绿色的圆圈是作者的头像，然后是发布的日期，内容的分类，最后还有一组按钮，一个按钮可以显示内容的摘要，另一个是内容的评论的链接。
我们可以把图像单独放在一组 <div> 标签里，它下面这些内容单独放一组 <div> 标签里。
回到网页的代码模式 ... 
在网页导航部分的下面，我们可以做网页的主体内容部分 ... 
先输入一组 <div> 标签 ...  然后在上面定义一个 id ，输入 id="main-content" ，这样我们可以使用 main-content 这个 id 为这部分内容应用一些样式 ...
在这组 <div> 标签里，再添加一组 <div> 标签  ...  在上面添加一个 .container 的类 ... 
下面我们先实施内容块的设计，我们可以在 Bootstrap 里找到一个合适这部分内容的组件 ...  打开 Bootstrap 项目的网站， http://twitter.github.com/bootstrap/ ，在 Components ，组件里 ...  点击 Thumbnails 缩略图 ...
这个组件比较适合我们的内容块的设计，浏览到这个小组件的代码的演示 ...
你会看到，在大容器的上面要应用一个 .thumbnails 类，然后每个项目上面使用一个布局的网格类，内容上面可以添加一个 .thumbnail ，这个类可以在内容的周围添加一个边框，在我们的设计里并不需要这个边框... 所以可以不添加这个类 ...
回到代码模式 ...
先输入一组 <div> 标签 ... 然后在上面添加一个 .thumbnails 类 ...
每个内容块我们可以添加一组 <article> 标签包装 ...  每个内容块占页面宽度的一半，所以在上面我们添加一个 .span6 的类。
每个内容块的里面分成两大块，上面是图片，下面是一些文字， 下面我们创建两组 <div> 标签分别包装这两块内容 ...
<div></div>
<div></div>
在第一组 <div> 标签上，我们定义一个类， class="media-box" ...   在第二组 <div> 标签上也定义一个类 ...  class="content-box"
一会儿我们要用这两个类做为样式的选择器，为这两块内容添加一些自定义的样式。


03-02-内容列表块的内容

在 .media-box 这组 <div> 标签里，插入一张图片 ...     输入 ...   <img src="content/1.jpg" alt="">
然后在 .content-box 里面，再添加一些内容，首先是内容的标题，可以使用标题标签，一级标题用 <h1> 标签，<h1></h1> ...
如果是二级标题，你可以用 <h2> 标签 ...  最多你可以使用六个级别的标题 ...  
内容标题的下面是内容作者，发布日期这些内容，这部分内容我们可以放在一组 <footer> 标签里面 ...
<footer></footer>
在这组 <footer> 标签里，先插入一张作者的头像 ...  <img src="content/avatar.jpg" alt="">
然后是内容的发布日期，2013-01-15 ... 时间可以使用 <time> 标签标记一下 ...  接着是内容的分类 ...  农场婚礼 ...  
最后是一组按钮，这里我们可以使用 Bootstrap 的按钮组的设计 ...  
http://twitter.github.com/bootstrap/  ，在 Components 里面 ...  点击 Button groups 按钮组 ...
复制一下按钮组的代码结构  ...  回来 ...  粘贴到这里 ...
               <div class="btn-group">
                <button class="btn">1</button>
                <button class="btn">2</button>
                <button class="btn">3</button>
              </div>
修改一下 ... 我们只需要两个按钮 ... 去掉一个 ...  然后把 <button> 标签改成 <a> 标签  ... 输入 href="#"
第一个按钮可以显示内容的摘要，第二个按钮是内容的评论链接 ... 我们可以使用 Bootstrap 的图标来代替文字  ...
回到 Bootstrap 项目的网站 ...  点击 Base CSS ...  Icons ...
在这里找到合适的图标 ... 我们可以使用 icon-info-sign 这个图标作为内容摘要的按钮图标 ...
用 icon-comment 这个图标作为评论按钮的图标 ... 
回到网页的代码模式 ...  在按钮组的第一个按钮里输入 <i class="icon-info-sign"></i> ...
在第二个按钮里输入 <i class="icon-comment"></i>  ...


03-03-内容块上的工具提示

下面我们再为作者头像和摘要按钮添加一个工具提示 ... 也就是用户把鼠标放在上面的时候，会弹出一个提示的内容 ...
打开 Bootstrap 项目的网站，点击 Javascript  ... 然后点击 Tooltip  ...
你可以在演示里看到这个工具提示的效果  ...  鼠标放在这些链接上面的时候，会弹出现提示内容 ...  你还可以定义弹出内容的方向 ...  一共有四个方向 ...
找到想要的效果 ，然后查看一下这个地方的元素 ...  你会看到代码的结构  ...  点击右键复制一下 ...
回到我们自己的网页代码 ...  粘贴到头像图片的上面 ... 
<a href="#" rel="tooltip" data-placement="left" data-original-title="Tooltip on left">Tooltip on left</a>
去掉这组 <a> 标签之间的文字 ... 然后把头像图片的代码放在他们中间 ...
在这个 <a> 标签上有一些属性 ...要使用一个 rel 属性，属性的值是 tooltip ，data-placement 属性表示工具提示弹出的位置，left 代表从左边弹出来 ... 
daga-original-title 属性里的值就是出现在工具提示里的内容  ...  我们改成作者的名称  ...  王皓 ...
另外，如果想让作者头像这个地方出现工具提示，我们还要使用一行 javascript 代码  ...
下面我们可以创建一个脚本文件 ...  把它放在 js 这个目录里面 ...  命名为  fenikso.js  ...  你可以根据自己的想法去命名这个脚本文件 ...
打开这个文件 ...  然后先输入 ...
jQuery(function($){
});
在这个大括号之间，我们可以添加自定义的 javascript 代码  ... 
     $(' #main-content [rel=tooltip] ').tooltip()
这行代码的意思是，找到 id 为 main-content 元素包装的所有 rel 属性为 tooltip 的元素 ...  然后为这些元素启用 tooltip ，也就是工具提示 ...
回到网页代码  ... 我们要把刚才创建的 fenikso.js 文件链接到网页里面 ... 
先复制一行链接脚本文件的代码  ...   然后修改一下，src 属性的值  ...  js/fenikso.js 
注意你的网页还要链接 jQuery 库，还有 bootstrap.js ... 顺序也很重要 ...  先链接  jQuery 库，然后是 bootstrap.js，最后是我们自定义的脚 本文件 ...
在网页的视图模式下 ...  鼠标放在作者头像的上面 ...  在他的左边，会出现工具提示的内容  ...


03-04-内容块上的 Popover

下面我们再处理一下这个摘要按钮，这个地方我们可以使用 Bootstrap 的 Popover ... 
在 Bootstrap 项目的网站 ...  点击 Javascript  ...  Popover  ...  在示例这里你可以看到不同方向的 Popover 的样式 ...
在下面有演示 ...  点击 按钮 ...  可以弹出 Popover 的窗口，上面会显示我们定义的内容 ...   Popover  有四个方向 ... 点键点击 Popover on top 这个按钮 ...  选择 审查元素 ...  你可以参考这个按钮的代码结构来改选我们自己的摘要按钮 ...  
回到网页代码模式 ...   找到摘要按钮 ...  在 <a> 标签里，添加 Popover 必要的属性和属性的值  ...
先输入一个 rel="popover" ，data-original-title="" ，这个属性里的值会作为 Popover 窗口的标题  ...  输入 摘要 ...
然后是 Popover 窗口的内容属性， data-content="一个温馨可爱的农场婚礼"  ...  最后我们可以定义窗口的方向，使用 data-placement 属性，把属性的值设置为 top ，表示窗口从上方弹出来 ... 
下面我们要写一行 javascript 代码来触发摘要按钮上的 Popover ...
打开 js 目录下面的 fenikso.js  ...  在新的一行里，输入 
 $(' #main-content [rel=popover] ').popover()
保存一下，然后回到网页的视图模式下 ...  用鼠标点击摘要按钮 ... 会弹出 Popover 窗口，上面会显示我们定义的内容 ...  再次点击这个按钮可以关闭这个窗口 ...
我们可以修改一下触发 Popover 窗口的行为，默认是点击，也就是只有点击才能弹出这个窗口，我们可以改成鼠标悬停，就是把鼠标放在上面就会直接弹出这个窗口 ...
回到网页代码  ...  在摘要按钮上面 ... 添加一个 data-trigger 属性，属性的值设置为 hover ...  保存 ...
回到视图模式，鼠标放在摘要按钮的上面 ...  会直接弹出 Popover 窗口。


03-05-内容块的样式

下面根据我们的设计为内容块添加一些样式。
在我们设计里面作者头像是圆形的，Bootstrap 架构为图片准备了几个样式，打开 Bootstrap 项目网站，打开 Base CSS ....  然后点击 Images ...
这里有三种样式，圆角，圆形，还有带边框的样式，要使用圆形的样式，需要在 <img> 标签上添加一个 .img-circle 类 ...
回到网页的代码模式...  找到作者头像 ...  输入 class="img-circle" ...
再处理一下这个按钮组，我们可以让它靠右显示，Bootstrap 架构提供了一个 .pull-right 类 ，可以让元素靠右显示 ... 
在按钮组的元素上，输入 pull-right ，在同一个元素上添加多个类，可以使用空格分隔不同的类名 ... 
我们可以再修改一下按钮的大小，在每个按钮上面添加一个 .btn-mini ，这个类可以让按钮变小 ...
下面我们再给这块内容添加一个灰色的边框 ...  .content-box 所在的元素包装了所有的内容，所以我们可以把这个灰色的边框的样式添加到这个类的上面。
打开网页的样式表 ...   先输入一段注释
/*
 * 主内容的样式
 */
在它的下面输入 .content-box {}  ，表示我们要为 .content-box 这个类添加样式，为这个类添加的样式会应用到所有使用这个类的元素上面 ...
border:1px solid #d7d7d7，这行样式会在元素的四周添加一条1像素的灰色实线 ...
在我们的设计里，最上边没有使用边线，所以在这行样式的下面，我们再添加一行样式去掉上边的边线 ...
border-top:none  
然后在它的内部添加点内边距，这样 .content-box 的边线和里面的内容之间会有一个空间 ... 
padding:10px
下面我们再修改一下内容块里的标题的样式。
.content-box h1{} ，这个样式选择器的意思是，找到 .content-box 这个类所在的元素包装的所有 <h1> 元素 ... 
输入 font-size:15px ，把字号设置为 15px，line-height:30px，设置一下文字的行间距为 30px，再输入 margin-top:0，去掉上边的外边距 ...
最后我们再处理一下作者头像，发布日期和分类的样式。
在我们的设计里，作者头像的宽度是 32px ，发布日期和分类这些文字的颜色是一种灰色 ，并且他们之间都会有一个间隔...
回到网页的代码模式，在头像周围，添加一组 <span> 标签，同样用 <span> 标签，包装一下分类的文字 ... 
在包装所有这些内容的 <footer> 标签上，我们再添加一个 .content-meta 的类 ...
再回到网页的样式表 ...  输入 .content-meta img{}  ，表示找到 .content-meta 类所在元素包装的所有的 <img> 标签 ...
width:32px ，设置宽度为 32px ...   再定义一段样式，输入
.content-meta span,
.content-meta time{}
找到 .content-meta 类所在元素包装的所有的 <span> 标签和 <time> 标签 ...  
margin-right:10px，添加一个10像素的外边距 ...  再设置下文字的颜色 ... color:# ，回到我们的设计，看一下这个地方的文字的颜色的值  ...
选择文字工具 ....  点击 文字  ....  然后点击文字颜色选择面板  ...   复制一下这个颜色的值  ...
回到网页样式表 ...  粘贴到 color 属性的后面 ...  
最后我们再给主内容的上面和下面添加点外边距 ... 
包装主内容的元素上，我们定义了一个叫 #main-content 的 id ，这里我们可以使用这个 id 作为样式的选择器 ...
#main-content{margin:20px 0;}
现在我们的内容块的设计就做好了


03-06-内容块的整体效果

下面我们可以再复制几块，看一下整体的效果  ....   回到网页的代码模式 ...
选中 <article> 和 </article> 之间的所有代码 ....   复制 ...   另起一行 .... 粘贴  ....  简单修改一下 ... 
再复制几块 ....   
现在我们会发现几个问题 ...  首先是每一行内容块之间没有空间 ...  再就是 ...  有些内容块被前面的内容块挡住了，布局出现了问题。
这里内容五这个区块被 内容三给挡住了。这是因为 ...  内容三这个区块里的图片比内容四里的图片高一点 ...
这样内容三区块整体的高度就比内容四大一些 ...  所以挡住了内容五这个区块 ...
打开网页的样式表， 我们先给每个内容块的下面添加一个下边的外边距 ... 
我们可以把这个外边距添加到 .content-box 这个类里面，也可以添加到包装内容块的 <article> 元素上 ...
这里我们加到 .content-box 里面 ...   margin-bottom:20px ，添加一个 20 像素的下边的外边距 ...
下面我们再解决一下内容块布局的问题 ...  引起布局的原因是每个内容块的高度不一致 ...  
我们可以给包装图片的元素上设置一下统一的高度 ...  然后再设置溢出为隐藏 ...  这样应该可以解决这个问题 ...
包装内容块图片的元素上定义了一个 .media-box 类，我们可以使用它作为样式的选择器 ...
.media-box{height:260px;overflow:hidden;}
.media-box 类所在的 <div> 标签包装了内容块的图片，设置了这个 <div> 标签的高度为 260px，溢出为隐藏 ... 也就是，如果这个 <div> 标签里面的内容的高度大于 260px ，多出来的内容会被隐藏 ... 
回到网页的视图模式 ....  现在就不会有布局问题了 ....


04-01-分页导航与导航路径

在我们的设计里，内容列表块的下面是分页导航，接下来是页面的导航路径 ...  这些小东西 Bootstrap 已经设计好了，打开 Bootstrap 项目的网站 ...
打开组件 Components  ...  我们先为页面添加一个分页导航 ...  点击分页 Pagination  ...    找到一个自己想要的样式 ...
然后复制一下这个样式的代码结构 ...
<ul class="pager">
  <li class="previous">
    <a href="#">&larr; Older</a>
  </li>
  <li class="next">
    <a href="#">Newer &rarr;</a>
  </li>
</ul>
回到网页的代码模式下，在内容列表块结束的位置 .... （#main-content 结束） 另起一行 ...  把分页的代码粘贴到这里 ... 
再回到 Bootstrap 项目网站，在组件这个页面，点击面包屑， Breadcrumbs，就是页面的导航路径 ... 它的作用就是告诉网页的用户当前页面的位置 ...
复制一下面包屑的代码结构 ...  回到网页代码模式 ....  在分页结束的位置 ...  另起一行 .... 把面包屑的代码粘贴到这里...
<ul class="breadcrumb">
  <li><a href="#">Home</a> <span class="divider">/</span></li>
  <li><a href="#">Library</a> <span class="divider">/</span></li>
  <li class="active">Data</li>
</ul>
切片
下面我们可以修改下这个面包屑的样式，先回到网页的设计图 ...  在我们的设计里，面包屑的下面只有一条灰色线，中间有一个蝴蝶结的图标 ...
选中切片工具 ...  按住鼠标左键，拖一个区域圈起这个蝴蝶结，这样我们就创建了一个切片，会儿我们可以把这个切片导出为一个图像 ...
放大设计图，微调一下这个切片的尺寸和位置 ...  按住空格键的同时，mac 用户再按住 command，windows 用户按住 ctrl 键，然后向右移动鼠标  ....  
切片的大小和位置正好 ...  双击这个切片  ...  给这个切片定义一个名称  ...  输入  bow ...
点击 文件 ，存储为 web 所用格式 ...  按住 空格 键  ...  拖拽设计图  ...  找到刚才的切片  ...  点击选中这个切片 ...  
然后在右边的 预设 这里，选择这个切片图像的格式 ... 这里我们可以使用 PNG-8 这种格式 ...
点击 存储 ... 位置选择 桌面，然后在 切片  这里，选择 选中的切片  ...  然后点击 存储 ...  
回到桌面上，打开 images 目录，在里面你可以找到切片图像 ... 我们把这个切片图像放在网页目录里面的 images 文件夹里 ...


04-02-导航路径上的蝴蝶结

回到网页的视图模式 ...  查看一下导航路径这块内容的元素 ...   在 bootstrap.css 里定义了导航路径的样式 ...
点击样式的出处，可以浏览到这块样式 ... 里面定义了导航路径的背景颜色  ...  我们可以在自己的样式表里覆盖这个背景颜色 ...
回到网页的样式表 ...
输入 .breadcrumb{background-color:#fff}  我们把它的背景颜色设置为跟网页背景一样的白色 ...
然后添加一个下边线 ...  border-bottom:1px solid #d7d7d7;
蝴蝶结样式
下面我们要在导航路径下边线的中间放一个蝴蝶结图像 ...  回到网页的代码模式  ... 找到导航路径的代码 ... 在它的下面添加一组 <i> 标签，在上面再添加一个类 ...  命名为 .icon-bow
回到样式表 ...  输入 .icon-bow{} ，输入 display:block，这行样式可以把行内元素变成块级元素，这样我们就可以设置元素的高度，宽度，还有背景 ...
先找到蝴蝶结图像 ... 看一下这个图像的大小 ...  
宽是 32px，高是 21px 
回到样式表，输入 width:32px; height:21px ，然后再设置一下它的背景， background:#fff url(images/bow.png) no-repeat 50% 50%
这行样式会把 bow.png 这个图像设置为 .icon-bow 的背景 ...   #fff ，表示背景的颜色是白色 ...  no-repeat 表示不重复显示背景 ，第一个 50% 代表背景图片的水平位置，50%表示水平中间的位置，第二个 50% 表示背景垂直的位置，50% 表示垂直中间的位置 ... 
 .icon-bow{
   display: block;
   width: 32px;
   height: 21px;
   background: #fff url(images/bow.png) no-repeat 50% 50%;
   padding: 0 10px;
   margin: 0 auto;
   margin-top: -30px;
 }
下面我们要让这个元素居中显示 ... 输入 margin:0 auto ，这行样式的意思是设置上下边距为 0 ，左右边距为自动 ... 这样元素会居中显示  ...
然后让它正好显示在导航路径下边线的上面 ....   输入 margin-top:-30px ，设置上边外边距的值为负的 30px ，这样会把元素向上提拉 30px  ...  (#切换到视图)
我们在元素的左边和右边各添加一个 10像素的内边距，因为我们设置了元素的背景颜色为白色，所以除了显示蝴蝶结背景以后，多出来的左右内边距会显示白色的背景 ...  
回到样式表，输入 padding: 0 10px; 
（#切换到视图）
这样我们就完成了导航路径的设计。


05-01-底部边栏的设计

页面底部这块的设计我们需要切几个图片，一个是上面的白色的半圆形，还有底部的绿色背景，内容区块上的水平的虚线，还有垂直的虚线 ...
选择 切片工具 ...  先切一个底部的绿色背景 ...    选择一块区域 ...  双击这个切片 ... 命名为 emerald ...
然后点击 文件 ，存储为 Web 所用格式 ...  选中刚才创建的切片 ...  在预设里修改一下切片图像的格式...  我们可以使用 PNG-8 这种格式 ...
然后点击 存储 ...  位置选择 桌面 ...  切片这里选择 选中的切片  ...  再点击 存储 ...
回到桌面...  打开 images ，找到刚才的切片图像 ...  把它放在网页目录下面的 images 文件夹里 ...
再回到我们的设计图 ...
下面我们再切这个半圆 ... 可以先放大显示这块设计 ...
我们只需要切一个半圆就行了，因为我们可以在样式表里设置让它水平重复显示 ... 
调整一下 ...  双击这个切片  ...  命名为 semicircle ...
然后再找到水平的虚线 ...  从虚线里的某个小横线的开始地方，到这个横线后面的间隔结束的地方 ...
在这个区域，我们创建一个切片 ....  可以再放大一点 ...  然后调整一下切片的大小和位置  ...
双击切片 ...  命名为 dashed-h
再找到垂直虚线 ...  在这个垂直虚线里的某个小竖线开始的地方 ...  到这个竖线后面的间隔结束的地方 ...  
调整一下切片 ...  
下面我们可以隐藏刚才这些切片图像下面的背景 ...  选择 选择工具 ...  勾选一下 自动选择 ...  然后点击 底部的背景 ...
这样可以选中这个图层 ...
然后把它暂时隐藏起来 ...  点一下左边这个眼睛的小图标 ...
再隐藏页面的这个白色的背景 ....   我们刚才创建的切片图像的下面会变成透明的 ...  这样导出来的切片图像也会是拥有透明的效果  ...
打开 文件 菜单，选择 存储为 Web 所用格式 ...  
先放大一下  ...  然后选中刚才创建的切片 ...  把切片图像的格式都设置为 PNG-24 ，这种格式的图像会保留透明的效果  ...
然后点击 存储 ...  位置选择桌面 ...  切片 选择 所有用户的切片 ...  点击 存储 ...
回到桌面 ...  打开 images 目录 ...  我们把生成的切片图像都放在网页目录下面的 images 文件夹里 ...
下面视频我们使用这些切片图像作为背景，来完成底部边栏的设计。


05-02-底部边栏的代码

在 id 为 main-content 的元素的结束的地方，另起一行 ...
边栏的内容我们可以使用 <aside> 标签包装 ...  在上面我们再定义一个 id ，id="bottom" ，一会儿我们可以把底部边栏的绿色背景应用在这个元素上面 ...  在它里面，再添加一组 <div> 标签 ，再定义一下 css 类 ， class="cemicircle" ，我们可以在这组 <div> 标签上添加其它的背景，比如设计里的半圆形的装饰 ... 
再添加一组 <div> ，在上面添加布局用到的 .container 类 ...  
然后是带有 .row 类的一组 <div> 标签 ...
底部边栏上的内容可以分成几块，你可以决定每块内容占用多大的宽度，比如我们分成三块，这样每块内容占用 4 份，也就是4个网格的宽度 ...  可以使用 .sapn4 这个类 ... 
<div class="span4"></div> 
每个内容块都可以是新的内容区域，所以，我们可以使用一组 <section> 标签 ... 
<section></section>
在这组标签里，我们可以包装真正的内容，区块的标题，可以使用 <h1> 标签 ....
<h3>底部内容区块一</h3>
然后普通的段落文字，可以使用 <p> 标签来标记 ...
<p>这里是底部内容区块文字，每个区块都是新的内容区域，使用 Bootstrap 布局很容易。</p>
这就是底部边栏基本的代码结构，下面视频我们给这部分内容添加一些样式。


05-03-底部边栏的样式

我们给底部边栏添加一个主要的背景，先打开网页的设计图，选择一种背景颜色，这里我们事先准备了几种颜色，点击前景色 ...  然后用鼠标点击设计图上的色块 ...  复制一下颜色的值  ...
回到网页的样式表 ...
先输入一段注释 /* 底部边栏的样式 */  ，然后，使用 #bottom 作为样式的选择器， bottom 这个 id 定义在了包装底部边栏所有内容的元素上面 ... 
输入 background，# 号，后面加上刚才我们复制的颜色的值，再输入 url() ，括号里面是背景图像的位置 ...
#bottom{background:#009571 url(images/emerald.png);}
下面我们再给底部边栏添加半圆装饰的背景 ...  使用 .semicircle 做为样式的选择器。
.semicircle{background:url(images/semicircle.png) repeat-x} ， repeat-x 表示背景图像水平重复显示 ...  
在这里我们可以为底部边栏添加一个整体的内边距，上下内边距设置为 20px，左右的内边距设置为 0 。
padding:20px 0; 
底部标题的样式
我们再处理一下底部内容的样式，先回到网页的设计图看一下 ...  
首先要设置一下标题的字号和颜色  ...  另外还要给标题文字添加一下阴影的效果 ... 这样它看起来有点立体感 ...  
我们先做这些样式，选择 文字工具 ，点击标题文字 ...  然后复制一下标题文字的颜色 ...
回到样式表，输入 #bottom h3{}  ...  这个选择器的意思是 #bottom 这个 id 所在的元素下面的所有的 <h3> 标签 ... 
#bottom h3{
     font-size:18px;
     color:#075442;
}
字号设置为 18px，文字的颜色设置为 #075442 ...  下面再给它添加个阴影效果 ...
text-shadow: 1px 1px 1px #  ...   text-shadow 是阴影效果 ，后面第一个值是阴影水平偏移的值，1px 表示向右偏移 1px，第二个值是阴影垂直偏移的值，1px 表示向下偏移 1px，第三个值是阴影的模糊值 ...
最后是阴影的颜色值 ...  回到网页设计图 ....
可以先放大标题这部分设计  ...  然后点击前景色 ...  再点击选择文字阴影的颜色  ...  复制一下这个颜色值 ....
回到样式表 ....  粘贴过来 ...  03AA82
再回到设计图看一下 ...  在底部标题的右边有一条带中显示的虚线 ...   完成这部分设计，我们用这个虚线作为标题标签的背景，并且让它居中显示。
不过这样文字的后面也会显示这个虚拟的背景 ... 解决这个问题，我们可以使用一组 <span> 标签包装一下标题里的文字 ...
然后给这组 <span> 标签添加跟底部边栏一样的背景图像，这个背景会盖住标题标签的虚线背景 ... 最后再给它添加一个右边的内边距 ...  这样可以给标题文字和虚线之间留出点空间。
先回到网页的代码模式 ...  找到底部边栏的标题 ...  
给标题文字的周围添加一组 <span> 标签  ....
再打开网页的样式表 ...    先给标题标签添加虚线背景
background:url(images/dashed-h.png) repeat-x 0 50%  ...
再给标题文字周围的 <span> 标签添加点样式 ...    #bottom h1 span{}  这个选择器的意思是找到 #bottom 下面的 <h1> 标签里面的 <span> 标签 ...
background:url(images/emerald.png);   添加跟底部一样的背景图像 ...
padding-right:10px，添加一下 10px 的右边的内边距 ...
底部内容样式
再处理一下标题以外的内容 ...  先设置一下文字的颜色 ...  在 #bottom 这个选择器里 ... 输入 font-size:13px 设置字号为 13px， color: #fff ，设置文字的颜色为白色，另外文字还有个阴影的效果 ...
text-shadow: 1px 1px 1px #  ...  回到设计图 ...  放大这块设计  ...  选择一下这个文字阴影的颜色  .... 复制一下颜色的值 ...
再回到样式表 ...  粘贴过来 ....
底部内容区块
在我们的设计里，底部内容区块之间会有一个垂直的虚线分隔 ....  先回到网页代码 ... 
在内容的周围用一组 <div> 包装一下 ...  在上面定义一个类 ... class="dashed-v"  ...  
回到样式表 ...  输入 .dashed-v {background:url(images/dashed-v.png) repeat-y 100% 0; padding: 0 20px 20px 0}
整体效果 
下面我们再复制两块底部的内容  ...  简单修改一下 ...
另外最后这个内容块的右边没有其它的内容了，所以，如果你愿意，可以去掉垂直虚线的背景 ...
现在页面底部边栏的设计就做好了。


06-01-页脚的设计与样式

下面我们来实施页脚部分的设计 ...  首先我们要创建一个页脚部分需要的背景图像切片  ...  在工具栏上选择 切片工具 ...
然后放大显示这部分设计  ...   从虚线的开始部分，一直到设计的最底部 ...  这一块作为页脚部分的背景，可以让它水平重复显示 ...   调整一下切片的大小和位置  ...  这个切片可以包含几个虚线 ...  不过要注意切片结束的位置一定要是虚线间隔的最后 ...
这样在背景重复显示的时候看起来才会完整 ...
双击切片 ... 命名为 emerald-footer ...
打开 文件 菜单 ... 选择 存储为 Web 所用格式 ...  选中刚才创建的切片 ...  设计切片图像的格式为 PNG-8  ...  然后点击 存储 ...
位置选择 桌面 ...  切片 选择 选中的切片  ...   再点击 存储 ...
回到桌面 ...  打开 images 目录 ....  把里面的切片图像放在网页目录下面的  images 文件夹里 ...
代码结构
回到网页的代码模式，在底部边栏结束的位置 ...  另起一行 ...  页脚内容可以使用 <footer> 标签 ...  先输入一组 <footer> ...
在上面定义一个 id， id="footer" ... 
再它的里面输入一组 <div> 标签 ...  添加一个 bootstrap 的布局类 ， class="container" ... 
在这里 <div> 标签里，我们可以直接输入页脚内容 ...  &copy; 2013 凤凰社 ... 
页脚样式
下面给这块内容添加点样式，打开网页的样式表 ...   输入一点注释 ...  /* 页脚部分的样式 */
然后使用 #footer 作为样式选择器 ...  定义一下页脚的背景...  先回到设计图复制一下页脚部分的背景颜色  ...  粘贴过来
#footer{background:url(images/emerald-footer.png) repeat-x #097a5f}
添加点内边距 ...  padding:30px 0 20px 0 
然后给页脚里的内容再添加点样式 ...  回到设计图 ... 复制一下页脚内容的文字颜色 ...
回到样式表，输入 color:#064536 ，再给页脚上的文字添加个阴影的效果 ...  text-shadow:1px 1px 1px #008F6D ...
回到设计图，看一下阴影的颜色 ...  复制一下 ...
粘贴过来 ... 
现在我们就完成了页脚部分的设计。


07-01-文章页面的设计

文章页面的设计跟主页差不多，页头，底部边栏，还有页脚都是一样的，不同是，页面的主内容区域分成两部分 ...  左边占用 8 个网格宽度，显示文章的内容，比如标题，正文，文章的评论等等 ...  右边的边栏占用 4 个网格的宽度 ...  
我们可以直接复制一份之前创建的网页，然后再修改一下 ...   复制一份 ...  命名为 article.html ....  然后打开这个网页 ...   删掉网页里面的内容列表块的内容  ...   
这个区域我们要可以分成两部分 ...  先输入一组 <div> ...  添加一个 .row 的类 ...  在这组 <div> 标签里，再输入两组 <div> 标签 ...  这两组 <div> 标签会分成两块显示在同一排 ...
第一组 <div> 标签上，添加一个 .span8 的类 ...   第二组 <div> 标签里，添加一个 .span4 的类 ...
把分页导航和面包屑也放在第一组 <div> 标签里 ...    然后在它们的上面，先输入文章的标题 ...  可以使用 <h1> 标签 ...  
<h1>内容的大标题</h1>  ，在这个 <h1> 标签上再定义一个类 .article-title 一会儿用这个类给文章的标题添加点样式 ...
footer
标题的下面是文章的发布日期，分类，标签，和评论链接这些内容 ...  这部分内容可以放在 <footer> 标签里 ...
<footer></footer>  ，在上面添加一个 .content-meta 类 ...
在它的里面分别是文章的发布日期 ...  使用 <time> 标签 ... 
<time>2013-01-10</time> 
然后是分类 ... 把它放在一组 <span> 标签里 ...
<span><a href="#">后院婚礼</a></span>
后面是内容的标签 ... 同样把它放在一组 <span> 标签里 ...  如果需要，我们可以在这组 <span> 标签上定义 css 类，这样可以专门针对这个 css 类添加一些样式 ...
<span><a href="#">秋天</a></span>
最后是文章评论的数量 ....
<span>3</span>
这里每一项内容的前面我们可以添加一个小图标 ...   打开 Bootstrap 项目的网站 ...  打开 Base CSS ...  点击 Icons ...
在这里你可以找几个合适的图标 ，使用对应的图标的类就可以在网页上添加对应的图标 ...   回到网页的代码模式下 ... 
用 <i> 标签 ... 然后添加对应的图标类 ...  日期的图标是  icon-calendar .... 
分类的前面添加一个 icon-book 图标 ...    标签前面添加一个 icon-tags 图标 ...  
评论数量的前面添加一个 icon-comment 图标 ...
#content
在这部分内容的下面就是文章的内容...  先输入一组  <div> 标签 ...  然后定义一个 #content 的 id ...
这组 <div> 标签里包装的就是文章的正文 ... 
先插入一张图片 ...  <img src="content/3.jpg" alt="">
在图片下面，再添加点文字 ... （准备好文字内容 ... ）
<p></p>
文章内容样式
下面给文章的内容添加点样式，打开网页的样式表 ...  输入一段注释 ...
然后输入 .article-title{}  给文章的标题添加一个下边的外边距 ... 
#content{} 给文章的正文的上边和下面添加一个 20px 的外边距...
#content img{} 给文章正文里面图片，添加一个 5px 的下边的外边距 ...
这样文章的内容基本就处理好了，下面视频我们来看一下文章的评论 ...
/*
 * 文章内容样式
 */
.article-title{
  margin-bottom: 30px;
}
#content{
  margin: 20px 0;
}
#content img{
  margin-bottom: 5px;
}


07-02-文章评论

文章评论的内容可以单独属于一部分内容...  所以，可以用一组 <section> 标签包装一下 ...   在上面定义一个 id ， id="comments"
然后是评论这部分内容的标题 ...  <h2> xxx 的评论</h2>
标题的下面每条评论的内容  ...  这里我们可以用 Bootstrap 架构的 media 组件来完成这块设计 ... 
打开 twitter.github.com/bootstrap ....  点击组件 ...  然后点击 Media object ...
你可以看到它的演示 ...   演示的下面是代码的结构  ...  复制一下 ...
回到网页的代码模式 ...  把这块代码结构粘贴过来 ....
每一条评论内容使用带有 .media 类的 <div> 标签包围 ...   然后可以是评论用户的头像 ...  这时我们修改一下 ...
src="content/avatar.jpg" ...  
评论的内容用一组带有 .media-body 类的 <div> 标签包围住 ...  里面是评论的标题，还有评论的内容 ...  评论标题的元素上要添加一个 .meida-heading 的类 ...
修改一下，可以改成评论的作者的名称 ... 王皓
然后这个标题里，我们可以加上评论发生的时间 ...  先用一组 <small> 标签 ...  再添加一组 <time> 标签 
<h2 class="media-heading">王皓 <small> <time>2012-01-13 上午 9:00</time></small></h2>
标题的下面是评论的正文 ... 
如果有嵌套的评论内容，比如用户回复的评论内容，我们可以把它放在 .media-boty 元素里面，评论的内容的代码结构是一样的 ... 
这里我们可以复制一份评论的内容 ...   在 .media-body 里已经有了一组 .media 的 <div> 标签 ... 所以在复制的时候不用复制带 .media 这个类的 <div> 标签了...
在这里还少一个 .media-boty 所在的元素的结束标签 ...   我们可以手工加上一个  </div> ...
下面再复制一段评论内容 ...  这次从 .media 所在的元素开始 ...  一直到它的结束 ...
然后在这条评论的代码结构的结尾处 ...  另起一行 ....  再把评论内容粘贴过来 ...
样式
下面我们给评论加点样式 ...  首先是评论的作者的头像，我们可以把它变成圆形的 ...  这里需要用到 Bootstrap 架构里为图像准备的样式 ...
找到作者头像 ...  在 <img> 标签里添加一个 .img-circle 类 ...  你会看到作者头像就变成圆形的了 ...
同样再处理一下另外两条评论上的作者头像 ....
在评论区域的大标题上，我们再添加一个标签，上面可以显示评论的数量  ...
这里要用到 Bootstrap 架构的标签样式 ...
输入一个空格，然后 .... <span class="label label-important">3</span>  ...  
再打开网页的样式表，改一下这个大标题的字号 ...
先输入一段注释 /* 评论样式 */
然后用 #comments 这个 id 作为样式的选择器 ...  
#comments h2 ...   表示找到 #comments 下面的 <h2> 标签  ...
font-size:18px
再给每条评论的下面添加一点外边距 ..
#comments .media{
     margin-bottom:20px
}
这样我们就完成了评论的设计。


07-03-右边栏

右边栏这里，我们可以先用一组 <aside> 标签  ....  然后在上面定义一个 id ， id="sidebar-right" ...
在这组标签是是右边栏上的不同部分的内容，每一部分内容都可以用一组 <section> 标签 ....
在它的里面是内容块的标题 ...  可以使用 <h3> 标签 ...  如果你愿意，也可以使用 <h1> 标签 ....
<h3>右边栏区块一</h3> 
下面是区块里的内容 ...  先复制一小段文字 ... 
<p>... </p>
右边栏标题的样式
下面我们来处理右边栏区块标题的样式...  先看一下我们的设计图 ...  
标题的右边会居中显示一条灰色的线 ...  这个样式你可以像页面底部用到的技巧 ...  就是先作一个灰色线的背景图像，然后应用在标题标签上 ...  在给标题上的文字的周围添加一组 <span> 标签，为这个 <span> 标签添加白色的背景 ... 
这里我们用一个新的技巧去处理这块儿设计 ... 
回到网页的代码模式 ... 
我们先在右边栏标题标签的周围添加一组 <div> 标签 ...
在上面定义一个类 ...   class="title-line" 
回到样式表 ...
我们先给 .title-line 添加一个下边的灰色连线 ...  
.title-line{border-bottom:1px solid #E8E8E8} 
再设置一下标题文字的字号 ...   再设置下行间距 ...  line-height:1 ...   用  positon 属性，把位置设置为相对 ... 
再输入 bottom:-13px ，这样会把 <h3> 元素向下拉 13 个像素 ...    
用 background 属性设置一下背景 ...  背景颜色设置为白色 ...  
因为 <h3> 标签是块级元素，所以应用的背景会盖住虚线 ... 
我们可以使用 display 属性，把它变成行内元素 ...  display:inline;
再添加一个右边的外边距 ...  
最后我们在 .title-line 上面添加一个下边的外边距 ...  
这样我们就完成了右边栏的设计  ....


